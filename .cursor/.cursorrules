# Правила Проекта MoodColor

## Организация Кода
- Использовать структурированную организацию директорий с четким разделением обязанностей
- Следовать принципам SOLID во всех реализациях
- Поддерживать код лаконичным и читаемым, минимизируя сложность
- Регистрировать все новые сервисы в точке входа через контейнер внедрения зависимостей

## Соглашения об Именовании
- PascalCase для публичных членов, классов, методов и свойств
- _camelCase для приватных членов
- Использовать описательные и осмысленные имена, которые четко сообщают назначение
- Префикс "I" для интерфейсов (например, IAuthService)

## Специфические для Unity Паттерны
- Использовать [SerializeField] для отображаемых в инспекторе приватных полей
- Реализовывать пулинг объектов для часто создаваемых объектов
- Использовать ScriptableObjects для дизайна, основанного на данных и общих ресурсах
- Оборачивать код только для редактора в директивы препроцессора #if UNITY_EDITOR
- Использовать TextMeshPro для всего рендеринга текста

## Соображения Производительности
- Внимательно отслеживать вызовы Update() и оптимизировать при возможности
- Использовать пулинг объектов вместо частых вызовов Instantiate() и Destroy()
- Реализовывать эффективную загрузку и управление ресурсами
- Учитывать ограничения мобильных устройств для всех реализаций

## Реализация UI
- Отделять логику UI от бизнес-логики
- Использовать паттерн MVVM для компонентов UI
- Реализовывать адаптивный дизайн, который адаптируется к разным размерам экранов
- Создавать многоразовые компоненты UI для поддержания согласованности

## Подход к Тестированию
- Писать модульные тесты для основной бизнес-логики
- Реализовывать правильную обработку ошибок и логирование
- Учитывать граничные случаи во всех реализациях
- Тестировать на нескольких конфигурациях устройств, когда возможно

## Рабочий Процесс Разработки
- Анализировать существующие реализации перед добавлением новых функций
- Следовать установленным паттернам при расширении функциональности
- Документировать сложную логику и важные решения
- Поддерживать Банк Памяти в актуальном состоянии по мере развития проекта

## Фокус на Пользовательском Опыте
- Приоритизировать интуитивные и плавные взаимодействия
- Обеспечивать согласованный визуальный стиль на всех экранах
- Минимизировать пользовательское трение и когнитивную нагрузку
- Учитывать доступность во всех реализациях UI 