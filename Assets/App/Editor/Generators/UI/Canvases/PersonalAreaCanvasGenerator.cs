#if UNITY_EDITOR
using UnityEngine;
using UnityEditor;
using UnityEngine.UI;
using TMPro;
using System.IO;
using App.Editor.Generators.UI.Core;
using App.Develop.CommonServices.Emotion;
using App.Develop.Scenes.PersonalAreaScene.UI.Components;
using App.App.Develop.Scenes.PersonalAreaScene.UI.Components;
using App.Develop.Scenes.PersonalAreaScene.UI;
using App.Develop.Scenes.PersonalAreaScene.Handlers;
using SafeAreaComponent = App.Develop.Scenes.PersonalAreaScene.UI.Components.SafeArea;

namespace App.Editor.Generators.UI.Canvases
{
    public class PersonalAreaCanvasGenerator
    {
        #region Constants
        private const string PREFAB_SAVE_FOLDER_PATH = "Assets/App/Prefabs/Generated/UI/Canvases/";
        private const string PREFAB_NAME = "PersonalAreaCanvas";

        // –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ MoodRoom
        private static readonly Color WarmWoodLight = new Color(0.9f, 0.8f, 0.7f, 1f);
        private static readonly Color WarmWoodMedium = new Color(0.82f, 0.71f, 0.55f, 1f);
        private static readonly Color WarmWoodDark = new Color(0.7f, 0.6f, 0.45f, 1f);
        private static readonly Color WoodDarkBrown = new Color(0.6f, 0.5f, 0.35f, 1f);
        private static readonly Color TextDark = new Color(0.25f, 0.2f, 0.15f, 1f);
        private static readonly Color TextLight = new Color(0.9f, 0.9f, 0.85f, 1f);
        private static readonly Color PaperBeige = new Color(0.95f, 0.9f, 0.8f, 1f);
        private static readonly Color GlassBlue = new Color(0.7f, 0.85f, 0.9f, 0.3f);
        private static readonly Color AccentGold = new Color(0.95f, 0.8f, 0.3f, 1f);
        #endregion

        [MenuItem("MoodColor/Generate/UI Canvases/Personal Area Canvas")]
        public static void GeneratePrefab()
        {
            Debug.Log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ—Ñ–∞–±–∞ Personal Area Canvas...");

            // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ—Ä–Ω–µ–≤–æ–π Canvas —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            var root = CreateMainCanvas();

            // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ–Ω –±–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            CreateSimpleBackground(root.transform);

            // –°–æ–∑–¥–∞–µ–º SafeArea –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —ç–∫—Ä–∞–Ω–∞–º
            var safeArea = CreateSafeArea(root.transform);

            // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å responsive —Ä–∞–∑–º–µ—Ç–∫–æ–π
            var mainContent = CreateMainContent(safeArea.transform);

            // –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            var profileInfo = CreateProfileInfo(mainContent.transform);
            var emotionJars = CreateEmotionJars(mainContent.transform);
            var statistics = CreateStatistics(mainContent.transform);
            var navigation = CreateNavigation(mainContent.transform);

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            SetupControllers(root, profileInfo, emotionJars, statistics, navigation);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ—Ñ–∞–±
            Debug.Log($"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ—Ñ–∞–± –≤ {Path.Combine(PREFAB_SAVE_FOLDER_PATH, PREFAB_NAME + ".prefab")}");
            UIComponentGenerator.SavePrefab(root, PREFAB_SAVE_FOLDER_PATH, PREFAB_NAME);

            if (!Application.isPlaying) Object.DestroyImmediate(root);

            Debug.Log("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ñ–∞–±–∞ Personal Area Canvas –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
        }

        #region Canvas Creation
        private static GameObject CreateMainCanvas()
        {
            var canvasGO = UIComponentGenerator.CreateBasePanelRoot(
                PREFAB_NAME,
                RenderMode.ScreenSpaceOverlay,
                0,
                new Vector2(1080, 1920),
                0.5f
            );

            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Tag –∏ Layer
            canvasGO.tag = "Untagged"; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç—ç–≥
            // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ UI —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Å–ª–æ–µ "UI". –ï—Å–ª–∏ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "Default"
            // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–ª–æ–π "UI" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ.
            int uiLayer = LayerMask.NameToLayer("UI");
            if (uiLayer == -1) // –ï—Å–ª–∏ —Å–ª–æ–π UI –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º Default
            {
                Debug.LogWarning("–°–ª–æ–π 'UI' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ–π 'Default' –¥–ª—è Canvas.");
                uiLayer = LayerMask.NameToLayer("Default");
            }
            canvasGO.layer = uiLayer;
            // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª–æ–π –¥–ª—è –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            // SetLayerRecursively(canvasGO.transform, uiLayer);

            var canvasScaler = canvasGO.GetComponent<CanvasScaler>();
            if (canvasScaler == null) canvasScaler = canvasGO.AddComponent<CanvasScaler>();

            canvasScaler.uiScaleMode = CanvasScaler.ScaleMode.ScaleWithScreenSize;
            canvasScaler.referenceResolution = new Vector2(1080, 1920);
            canvasScaler.screenMatchMode = CanvasScaler.ScreenMatchMode.MatchWidthOrHeight;
            canvasScaler.matchWidthOrHeight = 0.5f;
            canvasScaler.referencePixelsPerUnit = 100;

            // Graphic Raycaster –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å Canvas

            return canvasGO;
        }
        #endregion

        #region Simple Background
        private static void CreateSimpleBackground(Transform parent)
        {
            var background = CreateUIObject("Background", parent);
            var backgroundRect = background.GetComponent<RectTransform>();
            SetFullStretch(backgroundRect);

            var backgroundImage = background.AddComponent<Image>();
            backgroundImage.color = WarmWoodLight; // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–ø–ª—ã–π —Ñ–æ–Ω
        }
        #endregion

        #region Room Background
        private static void CreateRoomBackground(Transform parent)
        {
            var background = CreateUIObject("RoomBackground", parent);
            var backgroundRect = background.GetComponent<RectTransform>();
            SetFullStretch(backgroundRect);

            var backgroundImage = background.AddComponent<Image>();
            backgroundImage.color = WarmWoodLight;

            // –°–æ–∑–¥–∞–µ–º –æ–∫–æ–Ω–Ω—É—é —Ä–∞–º—É –∫–∞–∫ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            CreateWindowFrame(background.transform);

            // –°–æ–∑–¥–∞–µ–º –¥–µ—Ä–µ–≤—è–Ω–Ω—É—é –ø–æ–ª–∫—É
            CreateWoodenShelf(background.transform);
        }

        private static void CreateWindowFrame(Transform parent)
        {
            var windowFrame = CreateUIObject("WindowFrame", parent);
            var windowFrameRect = windowFrame.GetComponent<RectTransform>();
            windowFrameRect.anchorMin = new Vector2(0.5f, 1f);
            windowFrameRect.anchorMax = new Vector2(0.5f, 1f);
            windowFrameRect.sizeDelta = new Vector2(400, 250);
            windowFrameRect.anchoredPosition = new Vector2(0, -50);

            var windowFrameImage = windowFrame.AddComponent<Image>();
            windowFrameImage.color = WarmWoodDark;

            // –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —á–∞—Å—Ç—å –æ–∫–Ω–∞
            var windowView = CreateUIObject("WindowView", windowFrame.transform);
            var windowViewRect = windowView.GetComponent<RectTransform>();
            windowViewRect.anchorMin = Vector2.zero;
            windowViewRect.anchorMax = Vector2.one;
            windowViewRect.offsetMin = new Vector2(15, 15);
            windowViewRect.offsetMax = new Vector2(-15, -15);

            var windowViewImage = windowView.AddComponent<Image>();
            windowViewImage.color = GlassBlue;
        }

        private static void CreateWoodenShelf(Transform parent)
        {
            var shelf = CreateUIObject("WoodenShelf", parent);
            var shelfRect = shelf.GetComponent<RectTransform>();
            shelfRect.anchorMin = new Vector2(0, 0);
            shelfRect.anchorMax = new Vector2(1, 0);
            shelfRect.sizeDelta = new Vector2(0, 25);
            shelfRect.anchoredPosition = new Vector2(0, 25);

            var shelfImage = shelf.AddComponent<Image>();
            shelfImage.color = WoodDarkBrown;
        }
        #endregion

        #region Safe Area
        private static GameObject CreateSafeArea(Transform parent)
        {
            var safeArea = CreateUIObject("SafeArea", parent);
            var safeAreaRect = safeArea.GetComponent<RectTransform>();
            SetFullStretch(safeAreaRect);

            safeArea.AddComponent<SafeAreaComponent>();

            return safeArea;
        }
        #endregion

        #region Main Content
        private static GameObject CreateMainContent(Transform parent)
        {
            var mainContent = CreateUIObject("MainContent", parent);
            var mainContentRect = mainContent.GetComponent<RectTransform>();
            SetFullStretch(mainContentRect);

            var mainLayout = mainContent.AddComponent<VerticalLayoutGroup>();
            mainLayout.padding = new RectOffset(20, 20, 20, 20); // –£–º–µ–Ω—å—à–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            mainLayout.spacing = 15; // –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏
            mainLayout.childAlignment = TextAnchor.UpperCenter;
            mainLayout.childControlHeight = true; // MainContent –ö–û–ù–¢–†–û–õ–ò–†–£–ï–¢ –≤—ã—Å–æ—Ç—É –¥–æ—á–µ—Ä–Ω–∏—Ö —Å–µ–∫—Ü–∏–π
            mainLayout.childControlWidth = true;
            mainLayout.childForceExpandHeight = true; // –ò –ó–ê–°–¢–ê–í–õ–Ø–ï–¢ –∏—Ö —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å—Å—è
            mainLayout.childForceExpandWidth = true;

            return mainContent;
        }
        #endregion

        #region Profile Info Component
        private static GameObject CreateProfileInfo(Transform parent)
        {
            var profileInfo = CreateUIObject("ProfileInfo", parent);
            var layoutElement = profileInfo.AddComponent<LayoutElement>();
            layoutElement.minHeight = 100;
            layoutElement.preferredHeight = 120; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
            layoutElement.flexibleHeight = 0; // –ù–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ –≤ MainContent

            var backgroundImage = profileInfo.AddComponent<Image>();
            backgroundImage.color = WarmWoodMedium;

            var horizontalLayout = profileInfo.AddComponent<HorizontalLayoutGroup>();
            horizontalLayout.padding = new RectOffset(20, 20, 15, 15);
            horizontalLayout.spacing = 15;
            horizontalLayout.childAlignment = TextAnchor.MiddleLeft;
            horizontalLayout.childControlHeight = true; // –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É –∞–≤–∞—Ç–∞—Ä–∞ –∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫–∞
            horizontalLayout.childControlWidth = false; // –®–∏—Ä–∏–Ω–∞ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å—Å—è LayoutElement
            horizontalLayout.childForceExpandHeight = true;
            horizontalLayout.childForceExpandWidth = false;

            var avatarContainer = CreateUIObject("AvatarContainer", profileInfo.transform);
            var avatarLayoutElement = avatarContainer.AddComponent<LayoutElement>();
            avatarLayoutElement.minWidth = 60;
            avatarLayoutElement.minHeight = 60;
            avatarLayoutElement.preferredWidth = 80;
            avatarLayoutElement.preferredHeight = 80;
            avatarLayoutElement.flexibleWidth = 0;
            avatarLayoutElement.flexibleHeight = 0;

            var avatarImage = avatarContainer.AddComponent<Image>();
            avatarImage.color = AccentGold;
            avatarImage.preserveAspect = true;

            var userInfoContainer = CreateUIObject("UserInfoContainer", profileInfo.transform);
            var userInfoContainerLayoutElement = userInfoContainer.AddComponent<LayoutElement>();
            userInfoContainerLayoutElement.flexibleWidth = 1; // –ó–∞–Ω–∏–º–∞–µ—Ç –æ—Å—Ç–∞–≤—à—É—é—Å—è —à–∏—Ä–∏–Ω—É

            var userInfoLayout = userInfoContainer.AddComponent<VerticalLayoutGroup>();
            userInfoLayout.padding = new RectOffset(10, 0, 5, 5); // –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É
            userInfoLayout.spacing = 8; // –£–≤–µ–ª–∏—á–∏–º –Ω–µ–º–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∏–º–µ–Ω–µ–º –∏ —Å—Ç–∞—Ç—É—Å–æ–º
            userInfoLayout.childAlignment = TextAnchor.MiddleLeft;
            userInfoLayout.childControlHeight = false;
            userInfoLayout.childControlWidth = true;
            userInfoLayout.childForceExpandHeight = false;
            userInfoLayout.childForceExpandWidth = true;

            var usernameText = CreateTextElement("UsernameText", userInfoContainer.transform);
            var usernameComponent = usernameText.GetComponent<TextMeshProUGUI>();
            usernameComponent.text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
            usernameComponent.fontSize = 32; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            usernameComponent.fontWeight = FontWeight.Bold;
            usernameComponent.color = TextDark;
            usernameComponent.alignment = TextAlignmentOptions.Left;
            var usernameLayout = usernameText.AddComponent<LayoutElement>();
            usernameLayout.minHeight = 38; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            usernameLayout.preferredHeight = 42; // –£–≤–µ–ª–∏—á–µ–Ω–æ

            var statusText = CreateTextElement("StatusText", userInfoContainer.transform);
            var statusComponent = statusText.GetComponent<TextMeshProUGUI>();
            statusComponent.text = "–ö–∞–∫ –¥–µ–ª–∞ —Å–µ–≥–æ–¥–Ω—è?";
            statusComponent.fontSize = 22; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            statusComponent.color = TextDark;
            statusComponent.alpha = 0.8f;
            statusComponent.alignment = TextAlignmentOptions.Left;
            var statusLayout = statusText.AddComponent<LayoutElement>();
            statusLayout.minHeight = 28; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            statusLayout.preferredHeight = 30; // –£–≤–µ–ª–∏—á–µ–Ω–æ

            var profileInfoComponent = profileInfo.AddComponent<ProfileInfoComponent>();
            var serializedProfileInfo = new SerializedObject(profileInfoComponent);
            serializedProfileInfo.FindProperty("_usernameText").objectReferenceValue = usernameComponent;
            serializedProfileInfo.FindProperty("_currentEmotionImage").objectReferenceValue = avatarImage;
            serializedProfileInfo.ApplyModifiedProperties();

            return profileInfo;
        }
        #endregion

        #region Emotion Jars Component
        private static GameObject CreateEmotionJars(Transform parent)
        {
            var emotionJarsContainer = CreateUIObject("EmotionJars", parent);
            var layoutElement = emotionJarsContainer.AddComponent<LayoutElement>();
            layoutElement.minHeight = 200; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –±–∞–Ω–æ–∫
            layoutElement.flexibleHeight = 1; // –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ–º–∞—è —Å–µ–∫—Ü–∏—è

            var backgroundImage = emotionJarsContainer.AddComponent<Image>();
            backgroundImage.color = PaperBeige;

            var verticalLayout = emotionJarsContainer.AddComponent<VerticalLayoutGroup>();
            verticalLayout.padding = new RectOffset(15, 15, 15, 15);
            verticalLayout.spacing = 10;
            verticalLayout.childAlignment = TextAnchor.UpperCenter;
            verticalLayout.childControlHeight = false; // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ Grid —Å–∞–º–∏ —É–ø—Ä–∞–≤–ª—è—é—Ç –≤—ã—Å–æ—Ç–æ–π
            verticalLayout.childControlWidth = true;
            verticalLayout.childForceExpandHeight = false;
            verticalLayout.childForceExpandWidth = true;

            var titleText = CreateTextElement("Title", emotionJarsContainer.transform);
            var titleComponent = titleText.GetComponent<TextMeshProUGUI>();
            titleComponent.text = "–ë–∞–Ω–∫–∏ –≠–º–æ—Ü–∏–π";
            titleComponent.fontSize = 28; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            titleComponent.fontWeight = FontWeight.Bold;
            titleComponent.color = TextDark;
            titleComponent.alignment = TextAlignmentOptions.Center;
            var titleLayoutElement = titleText.AddComponent<LayoutElement>();
            titleLayoutElement.minHeight = 30;
            titleLayoutElement.preferredHeight = 35; // –£–≤–µ–ª–∏—á–µ–Ω–æ

            var jarsGrid = CreateUIObject("JarsGrid", emotionJarsContainer.transform);
            var jarsGridLayoutElement = jarsGrid.AddComponent<LayoutElement>();
            jarsGridLayoutElement.flexibleHeight = 1; // –ü–æ–∑–≤–æ–ª—è–µ–º —Å–µ—Ç–∫–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å—Å—è –≤–Ω—É—Ç—Ä–∏ —Å–≤–æ–µ–π —Å–µ–∫—Ü–∏–∏

            var gridLayout = jarsGrid.AddComponent<GridLayoutGroup>();
            gridLayout.padding = new RectOffset(0, 0, 5, 0);
            gridLayout.cellSize = new Vector2(100, 130); // –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏–ª –≤—ã—Å–æ—Ç—É –±–∞–Ω–æ–∫
            gridLayout.spacing = new Vector2(15, 15);
            gridLayout.startCorner = GridLayoutGroup.Corner.UpperLeft;
            gridLayout.startAxis = GridLayoutGroup.Axis.Horizontal;
            gridLayout.childAlignment = TextAnchor.MiddleCenter;
            gridLayout.constraint = GridLayoutGroup.Constraint.FixedColumnCount;
            gridLayout.constraintCount = 3;

            var gridContentSizeFitter = jarsGrid.AddComponent<ContentSizeFitter>();
            gridContentSizeFitter.verticalFit = ContentSizeFitter.FitMode.PreferredSize;

            var emotionJars = new Image[11];
            var emotionTypes = System.Enum.GetValues(typeof(EmotionTypes));
            for (int i = 0; i < emotionTypes.Length; i++)
            {
                var emotionType = (EmotionTypes)emotionTypes.GetValue(i);
                var jarObject = CreateEmotionJar(jarsGrid.transform, emotionType, emotionJarsContainer.GetComponent<EmotionJarView>());
                emotionJars[i] = jarObject.GetComponentInChildren<Image>();
            }

            var bubblesContainer = CreateUIObject("BubblesContainer", emotionJarsContainer.transform);
            var bubblesRect = bubblesContainer.GetComponent<RectTransform>();
            SetFullStretch(bubblesRect);
            bubblesRect.SetAsLastSibling();

            var emotionJarView = emotionJarsContainer.AddComponent<EmotionJarView>();
            var serializedEmotionJars = new SerializedObject(emotionJarView);
            var emotionJarFields = new[] { "_joyJarFill", "_sadnessJarFill", "_angerJarFill", "_fearJarFill", "_disgustJarFill", "_trustJarFill", "_anticipationJarFill", "_surpriseJarFill", "_loveJarFill", "_anxietyJarFill", "_neutralJarFill" };
            for (int i = 0; i < emotionJars.Length && i < emotionJarFields.Length; i++)
            {
                serializedEmotionJars.FindProperty(emotionJarFields[i]).objectReferenceValue = emotionJars[i];
            }
            serializedEmotionJars.FindProperty("_bubblesContainer").objectReferenceValue = bubblesContainer.transform;
            serializedEmotionJars.ApplyModifiedProperties();

            return emotionJarsContainer;
        }

        private static GameObject CreateEmotionJar(Transform parent, EmotionTypes emotionType, EmotionJarView emotionJarViewComponent)
        {
            var jarContainer = CreateUIObject($"{emotionType}Jar", parent);

            var jarBackground = CreateUIObject("JarBackground", jarContainer.transform);
            var jarBackgroundRect = jarBackground.GetComponent<RectTransform>();
            SetFullStretch(jarBackgroundRect);
            var jarBackgroundImage = jarBackground.AddComponent<Image>();
            jarBackgroundImage.color = WarmWoodMedium;
            jarBackgroundImage.type = Image.Type.Sliced;

            var jarFill = CreateUIObject("JarFill", jarContainer.transform);
            var jarFillRect = jarFill.GetComponent<RectTransform>();
            SetFullStretch(jarFillRect);
            jarFillRect.offsetMin = new Vector2(5, 5);
            jarFillRect.offsetMax = new Vector2(-5, -5);
            var jarFillImage = jarFill.AddComponent<Image>();
            jarFillImage.color = GetEmotionColor(emotionType);
            jarFillImage.type = Image.Type.Filled;
            jarFillImage.fillMethod = Image.FillMethod.Vertical;
            jarFillImage.fillOrigin = 0;
            jarFillImage.fillAmount = Random.Range(0.1f, 0.7f);

            var labelText = CreateTextElement("Label", jarContainer.transform);
            var labelRect = labelText.GetComponent<RectTransform>();
            labelRect.anchorMin = new Vector2(0, 0);
            labelRect.anchorMax = new Vector2(1, 0);
            labelRect.sizeDelta = new Vector2(0, 30);
            labelRect.anchoredPosition = new Vector2(0, -12);
            var labelComponent = labelText.GetComponent<TextMeshProUGUI>();
            labelComponent.text = GetEmotionDisplayName(emotionType);
            labelComponent.fontSize = 15;
            labelComponent.color = TextDark;
            labelComponent.alignment = TextAlignmentOptions.Center;
            labelComponent.enableAutoSizing = true;
            labelComponent.fontSizeMin = 10;
            labelComponent.fontSizeMax = 15;

            var button = jarContainer.AddComponent<Button>();
            button.targetGraphic = jarBackgroundImage;

            var colors = button.colors;
            colors.highlightedColor = new Color(0.95f, 0.95f, 0.95f, 1f);
            colors.pressedColor = new Color(0.85f, 0.85f, 0.85f, 1f);
            button.colors = colors;

            // –ó–¥–µ—Å—å –ù–ï –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º onClick, —ç—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ –≤ SetupControllers
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —ç–º–æ—Ü–∏–∏ –≤ –∏–º–µ–Ω–∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            jarContainer.name = $"{emotionType}Jar"; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∏–ø —ç–º–æ—Ü–∏–∏

            return jarFill;
        }
        #endregion

        #region Statistics Component
        private static GameObject CreateStatistics(Transform parent)
        {
            var statisticsContainer = CreateUIObject("Statistics", parent);
            var layoutElement = statisticsContainer.AddComponent<LayoutElement>();
            layoutElement.minHeight = 120;
            layoutElement.preferredHeight = 160; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
            layoutElement.flexibleHeight = 0; // –ù–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è

            var backgroundImage = statisticsContainer.AddComponent<Image>();
            backgroundImage.color = WarmWoodMedium;

            var verticalLayout = statisticsContainer.AddComponent<VerticalLayoutGroup>();
            verticalLayout.padding = new RectOffset(20, 20, 15, 15);
            verticalLayout.spacing = 8;
            verticalLayout.childAlignment = TextAnchor.UpperCenter;
            verticalLayout.childControlHeight = false; // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–º–∏ —É–ø—Ä–∞–≤–ª—è—é—Ç –≤—ã—Å–æ—Ç–æ–π
            verticalLayout.childControlWidth = true;
            verticalLayout.childForceExpandHeight = false;
            verticalLayout.childForceExpandWidth = true;

            var titleText = CreateTextElement("Title", statisticsContainer.transform);
            var titleComponent = titleText.GetComponent<TextMeshProUGUI>();
            titleComponent.text = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞";
            titleComponent.fontSize = 26; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            titleComponent.fontWeight = FontWeight.Bold;
            titleComponent.color = TextDark;
            titleComponent.alignment = TextAlignmentOptions.Center;
            var titleLayoutElement = titleText.AddComponent<LayoutElement>();
            titleLayoutElement.minHeight = 30; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            titleLayoutElement.preferredHeight = 35; // –£–≤–µ–ª–∏—á–µ–Ω–æ

            var generalStats = CreateUIObject("GeneralStats", statisticsContainer.transform);
            var generalStatsLayout = generalStats.AddComponent<HorizontalLayoutGroup>();
            generalStatsLayout.spacing = 20;
            generalStatsLayout.childAlignment = TextAnchor.MiddleCenter;
            generalStatsLayout.childControlHeight = true;
            generalStatsLayout.childControlWidth = true;
            generalStatsLayout.childForceExpandWidth = true;
            var generalStatsLayoutElement = generalStats.AddComponent<LayoutElement>();
            generalStatsLayoutElement.minHeight = 30;
            generalStatsLayoutElement.preferredHeight = 35;

            var pointsText = CreateTextElement("PointsText", generalStats.transform);
            var pointsComponent = pointsText.GetComponent<TextMeshProUGUI>();
            pointsComponent.text = "–û—á–∫–∏: 0";
            pointsComponent.fontSize = 20; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            pointsComponent.color = AccentGold;
            pointsComponent.alignment = TextAlignmentOptions.Center;
            pointsComponent.fontWeight = FontWeight.Bold;

            var entriesText = CreateTextElement("EntriesText", generalStats.transform);
            var entriesComponent = entriesText.GetComponent<TextMeshProUGUI>();
            entriesComponent.text = "–ó–∞–ø–∏—Å–µ–π: 0";
            entriesComponent.fontSize = 20; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            entriesComponent.color = AccentGold;
            entriesComponent.alignment = TextAlignmentOptions.Center;
            entriesComponent.fontWeight = FontWeight.Bold;

            var regionalSection = CreateUIObject("RegionalSection", statisticsContainer.transform);
            var regionalSectionLayoutElement = regionalSection.AddComponent<LayoutElement>();
            regionalSectionLayoutElement.flexibleHeight = 1; // –≠—Ç–∞ —á–∞—Å—Ç—å —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            regionalSectionLayoutElement.minHeight = 50;

            var regionalSectionLayout = regionalSection.AddComponent<VerticalLayoutGroup>();
            regionalSectionLayout.spacing = 5;
            regionalSectionLayout.childAlignment = TextAnchor.UpperCenter;
            regionalSectionLayout.childControlHeight = false;
            regionalSectionLayout.childControlWidth = true;

            var regionalTitleText = CreateTextElement("RegionalTitle", regionalSection.transform);
            var regionalTitleComponent = regionalTitleText.GetComponent<TextMeshProUGUI>();
            regionalTitleComponent.text = "–≠–º–æ—Ü–∏–∏ –ø–æ —Ä–∞–π–æ–Ω–∞–º";
            regionalTitleComponent.fontSize = 18; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            regionalTitleComponent.color = TextDark;
            regionalTitleComponent.alignment = TextAlignmentOptions.Center;
            var regionalTitleLayoutElement = regionalTitleText.AddComponent<LayoutElement>();
            regionalTitleLayoutElement.minHeight = 22; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            regionalTitleLayoutElement.preferredHeight = 25; // –£–≤–µ–ª–∏—á–µ–Ω–æ

            var scrollView = CreateUIObject("RegionalScrollView", regionalSection.transform);
            var scrollViewLayoutElement = scrollView.AddComponent<LayoutElement>();
            scrollViewLayoutElement.flexibleHeight = 1;
            var scrollRect = scrollView.AddComponent<ScrollRect>();
            scrollRect.horizontal = false;
            scrollRect.vertical = true;
            scrollRect.scrollSensitivity = 20;

            var viewport = CreateUIObject("Viewport", scrollView.transform);
            var viewportRect = viewport.GetComponent<RectTransform>();
            SetFullStretch(viewportRect);
            viewport.AddComponent<Image>().color = new Color(0, 0, 0, 0);
            viewport.AddComponent<Mask>().showMaskGraphic = false;
            scrollRect.viewport = viewportRect;

            var content = CreateUIObject("Content", viewport.transform);
            var contentRect = content.GetComponent<RectTransform>();
            contentRect.anchorMin = new Vector2(0, 1);
            contentRect.anchorMax = new Vector2(1, 1);
            contentRect.pivot = new Vector2(0.5f, 1);
            contentRect.sizeDelta = new Vector2(0, 0);

            var contentLayout = content.AddComponent<VerticalLayoutGroup>();
            contentLayout.padding = new RectOffset(5, 5, 5, 5);
            contentLayout.spacing = 5;
            contentLayout.childAlignment = TextAnchor.UpperCenter;
            contentLayout.childControlHeight = true;
            contentLayout.childControlWidth = true;
            contentLayout.childForceExpandHeight = false;
            contentLayout.childForceExpandWidth = true;
            var contentSizeFitter = content.AddComponent<ContentSizeFitter>();
            contentSizeFitter.verticalFit = ContentSizeFitter.FitMode.PreferredSize;
            scrollRect.content = contentRect;

            var noDataText = CreateTextElement("NoDataText", content.transform);
            var noDataComponent = noDataText.GetComponent<TextMeshProUGUI>();
            noDataComponent.text = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ —Ä–∞–π–æ–Ω–∞–º";
            noDataComponent.fontSize = 18; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            noDataComponent.color = TextDark;
            noDataComponent.alpha = 0.7f;
            noDataComponent.alignment = TextAlignmentOptions.Center;

            var statisticsView = statisticsContainer.AddComponent<StatisticsView>();
            var serializedStatistics = new SerializedObject(statisticsView);
            serializedStatistics.FindProperty("_pointsText").objectReferenceValue = pointsComponent;
            serializedStatistics.FindProperty("_entriesText").objectReferenceValue = entriesComponent;
            serializedStatistics.FindProperty("_regionalStatsContainer").objectReferenceValue = content.transform;
            serializedStatistics.FindProperty("_noRegionalDataText").objectReferenceValue = noDataComponent;
            serializedStatistics.FindProperty("_regionalStatsTitle").objectReferenceValue = regionalTitleComponent;
            serializedStatistics.ApplyModifiedProperties();

            return statisticsContainer;
        }
        #endregion

        #region Navigation Component
        private static GameObject CreateNavigation(Transform parent)
        {
            var navigationContainer = CreateUIObject("Navigation", parent);
            var layoutElement = navigationContainer.AddComponent<LayoutElement>();
            layoutElement.minHeight = 70;
            layoutElement.preferredHeight = 80; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞
            layoutElement.flexibleHeight = 0; // –ù–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è

            var backgroundImage = navigationContainer.AddComponent<Image>();
            backgroundImage.color = WoodDarkBrown;

            var horizontalLayout = navigationContainer.AddComponent<HorizontalLayoutGroup>();
            horizontalLayout.padding = new RectOffset(10, 10, 10, 10);
            horizontalLayout.spacing = 8;
            horizontalLayout.childAlignment = TextAnchor.MiddleCenter;
            horizontalLayout.childControlHeight = true; // –ö–Ω–æ–ø–∫–∏ —Å–∞–º–∏ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Å–≤–æ—é –≤—ã—Å–æ—Ç—É —á–µ—Ä–µ–∑ LayoutElement
            horizontalLayout.childControlWidth = true;
            horizontalLayout.childForceExpandHeight = true; // –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –≤—ã—Å–æ—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            horizontalLayout.childForceExpandWidth = true;

            var buttonTexts = new[] { "–ó–∞–ø–∏—Å–∞—Ç—å", "–ò—Å—Ç–æ—Ä–∏—è", "–î—Ä—É–∑—å—è", "–ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–í—ã—Ö–æ–¥" };
            var buttonColors = new[] { AccentGold, WarmWoodLight, WarmWoodLight, WarmWoodLight, WarmWoodLight, new Color(0.8f, 0.3f, 0.3f, 1f) };
            var buttons = new Button[6];
            for (int i = 0; i < buttonTexts.Length; i++)
            {
                buttons[i] = CreateNavigationButton(navigationContainer.transform, buttonTexts[i], buttonColors[i]);
            }

            var navigationComponent = navigationContainer.AddComponent<NavigationComponent>();
            var serializedNavigation = new SerializedObject(navigationComponent);
            serializedNavigation.FindProperty("_logEmotionButton").objectReferenceValue = buttons[0];
            serializedNavigation.FindProperty("_historyButton").objectReferenceValue = buttons[1];
            serializedNavigation.FindProperty("_friendsButton").objectReferenceValue = buttons[2];
            serializedNavigation.FindProperty("_workshopButton").objectReferenceValue = buttons[3];
            serializedNavigation.FindProperty("_settingsButton").objectReferenceValue = buttons[4];
            serializedNavigation.FindProperty("_quitButton").objectReferenceValue = buttons[5];
            serializedNavigation.ApplyModifiedProperties();

            return navigationContainer;
        }

        private static Button CreateNavigationButton(Transform parent, string text, Color backgroundColor)
        {
            var buttonObject = CreateUIObject($"Button_{text}", parent);
            var layoutElement = buttonObject.AddComponent<LayoutElement>();
            layoutElement.minHeight = 40; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏
            layoutElement.flexibleWidth = 1; // –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –¥–µ–ª—è—Ç —à–∏—Ä–∏–Ω—É

            var buttonImage = buttonObject.AddComponent<Image>();
            buttonImage.color = backgroundColor;

            var buttonComponent = buttonObject.AddComponent<Button>();
            buttonComponent.targetGraphic = buttonImage;

            var colors = buttonComponent.colors;
            colors.normalColor = backgroundColor;
            colors.highlightedColor = new Color(backgroundColor.r * 0.9f, backgroundColor.g * 0.9f, backgroundColor.b * 0.9f, backgroundColor.a);
            colors.pressedColor = new Color(backgroundColor.r * 0.8f, backgroundColor.g * 0.8f, backgroundColor.b * 0.8f, backgroundColor.a);
            colors.selectedColor = colors.highlightedColor;
            buttonComponent.colors = colors;

            var buttonText = CreateTextElement("Text", buttonObject.transform);
            var textRect = buttonText.GetComponent<RectTransform>();
            SetFullStretch(textRect);
            var textComponent = buttonText.GetComponent<TextMeshProUGUI>();
            textComponent.text = text;
            textComponent.fontSize = 18; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            textComponent.fontWeight = FontWeight.SemiBold; // –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ SemiBold –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
            textComponent.color = TextDark;
            textComponent.alignment = TextAlignmentOptions.Center;
            textComponent.enableAutoSizing = true;
            textComponent.fontSizeMin = 12; // –£–≤–µ–ª–∏—á–µ–Ω–æ
            textComponent.fontSizeMax = 18; // –£–≤–µ–ª–∏—á–µ–Ω–æ

            return buttonComponent;
        }
        #endregion

        #region Controllers Setup
        private static void SetupControllers(GameObject root, GameObject profileInfo, GameObject emotionJars, GameObject statistics, GameObject navigation)
        {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PersonalAreaUIController
            var uiController = root.AddComponent<PersonalAreaUIController>();
            var serializedUI = new SerializedObject(uiController);
            serializedUI.FindProperty("_profileInfo").objectReferenceValue = profileInfo.GetComponent<ProfileInfoComponent>();
            serializedUI.FindProperty("_emotionJars").objectReferenceValue = emotionJars.GetComponent<EmotionJarView>();
            serializedUI.FindProperty("_statistics").objectReferenceValue = statistics.GetComponent<StatisticsView>();
            serializedUI.FindProperty("_navigation").objectReferenceValue = navigation.GetComponent<NavigationComponent>();
            serializedUI.ApplyModifiedProperties();

            // –î–æ–±–∞–≤–ª—è–µ–º JarInteractionHandler –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤ –ø–æ –±–∞–Ω–∫–∞–º —ç–º–æ—Ü–∏–π
            var jarInteractionHandler = root.AddComponent<JarInteractionHandler>();

            // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –±–∞–Ω–æ–∫ —ç–º–æ—Ü–∏–π –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏—Ö
            var jarsGrid = emotionJars.transform.Find("JarsGrid");
            if (jarsGrid != null)
            {
                // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –æ–±—ä–µ–∫—Ç—ã –≤ —Å–µ—Ç–∫–µ –±–∞–Ω–æ–∫
                foreach (Transform jarContainer in jarsGrid)
                {
                    // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∏–ø —ç–º–æ—Ü–∏–∏ –∏–∑ –∏–º–µ–Ω–∏ –æ–±—ä–µ–∫—Ç–∞
                    string jarName = jarContainer.name;
                    if (jarName.EndsWith("Jar") && jarName.Length > 3)
                    {
                        // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —ç–º–æ—Ü–∏–∏ –∏–∑ –∏–º–µ–Ω–∏ –æ–±—ä–µ–∫—Ç–∞ (–±–µ–∑ "Jar" –≤ –∫–æ–Ω—Ü–µ)
                        string emotionName = jarName.Substring(0, jarName.Length - 3);

                        // –ö–Ω–æ–ø–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å–∞–º–æ–º –æ–±—ä–µ–∫—Ç–µ jarContainer
                        var button = jarContainer.GetComponent<Button>();
                        if (button != null)
                        {
                            // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                            button.onClick.RemoveAllListeners();

                            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—ã–∑–æ–≤ OnJarClicked —Å –∏–º–µ–Ω–µ–º —ç–º–æ—Ü–∏–∏
                            UnityEditor.Events.UnityEventTools.AddStringPersistentListener(
                                button.onClick,
                                jarInteractionHandler.OnJarClicked,
                                emotionName);

                            Debug.Log($"–ü–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è {emotionName}Jar –∫ JarInteractionHandler.OnJarClicked");
                        }
                        else
                        {
                            Debug.LogWarning($"–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç–µ {jarName}");
                        }
                    }
                }
            }
            else
            {
                Debug.LogError("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å–µ—Ç–∫–∞ –±–∞–Ω–æ–∫ JarsGrid –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ emotionJars");
            }

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PersonalAreaManager
            var personalAreaManager = root.AddComponent<PersonalAreaManager>();
            var serializedManager = new SerializedObject(personalAreaManager);
            // –ò–º—è –ø–æ–ª—è –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ Canvas –≤ PersonalAreaManager –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è, 
            // –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ '_uiCanvas' –∏–ª–∏ '_personalAreaCanvas'
            // –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –ø–æ–ª—è –≤ —Å–∫—Ä–∏–ø—Ç–µ PersonalAreaManager
            var uiCanvasProperty = serializedManager.FindProperty("_ui"); // –†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∏–º—è –¥–ª—è UI —Å—Å—ã–ª–∫–∏
            if (uiCanvasProperty == null)
            {
                uiCanvasProperty = serializedManager.FindProperty("ui"); // –ü–æ–ø—Ä–æ–±—É–µ–º —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã
            }
            if (uiCanvasProperty == null)
            {
                uiCanvasProperty = serializedManager.FindProperty("_personalAreaCanvas");
            }
            if (uiCanvasProperty == null)
            {
                uiCanvasProperty = serializedManager.FindProperty("_personalAreaView"); // –ï—â–µ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç
            }

            if (uiCanvasProperty != null)
            {
                // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ PersonalAreaManager –æ–∂–∏–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ GameObject Canvas'–∞
                // –∏–ª–∏ –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç PersonalAreaCanvas (–µ—Å–ª–∏ —Ç–∞–∫–æ–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ View)
                // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –Ω—É–∂–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–º GameObject Canvas'–∞
                if (uiCanvasProperty.propertyType == SerializedPropertyType.ObjectReference)
                {
                    // –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏—Å–≤–æ–∏—Ç—å GameObject –∫–æ—Ä–Ω–µ–≤–æ–≥–æ Canvas
                    uiCanvasProperty.objectReferenceValue = root;
                    if (uiCanvasProperty.objectReferenceValue == null)
                    {
                        // –ï—Å–ª–∏ –Ω–µ –ø—Ä–∏—Å–≤–æ–∏–ª—Å—è GameObject, –≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–µ–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∏–ø–∞ Canvas –∏–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π View
                        // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Canvas
                        uiCanvasProperty.objectReferenceValue = root.GetComponent<Canvas>();
                        if (uiCanvasProperty.objectReferenceValue == null)
                        {
                            // –ï—Å–ª–∏ PersonalAreaManager –æ–∂–∏–¥–∞–µ—Ç PersonalAreaUIController –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
                            uiCanvasProperty.objectReferenceValue = uiController;
                        }
                    }
                }
                else
                {
                    Debug.LogError("–°–≤–æ–π—Å—Ç–≤–æ –¥–ª—è UI –≤ PersonalAreaManager –Ω–µ —è–≤–ª—è–µ—Ç—Å—è ObjectReference.");
                }
            }
            else
            {
                Debug.LogError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è UI Canvas –≤ PersonalAreaManager. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º–µ–Ω–∞ –ø–æ–ª–µ–π: '_ui', 'ui', '_personalAreaCanvas', '_personalAreaView'.");
            }
            serializedManager.ApplyModifiedProperties();
        }
        #endregion

        #region Utility Methods
        private static GameObject CreateUIObject(string name, Transform parent)
        {
            var uiObject = new GameObject(name, typeof(RectTransform));
            uiObject.transform.SetParent(parent, false);
            return uiObject;
        }

        private static GameObject CreateTextElement(string name, Transform parent)
        {
            var textObject = CreateUIObject(name, parent);
            var textComponent = textObject.AddComponent<TextMeshProUGUI>();
            textComponent.fontSize = 16;
            textComponent.color = TextDark;
            textComponent.alignment = TextAlignmentOptions.Left;
            return textObject;
        }

        private static void SetFullStretch(RectTransform rect)
        {
            rect.anchorMin = Vector2.zero;
            rect.anchorMax = Vector2.one;
            rect.offsetMin = Vector2.zero;
            rect.offsetMax = Vector2.zero;
        }

        private static Color GetEmotionColor(EmotionTypes emotionType)
        {
            return emotionType switch
            {
                EmotionTypes.Joy => new Color(1f, 0.85f, 0.1f, 0.8f),
                EmotionTypes.Sadness => new Color(0.15f, 0.3f, 0.8f, 0.8f),
                EmotionTypes.Anger => new Color(0.9f, 0.1f, 0.1f, 0.8f),
                EmotionTypes.Fear => new Color(0.5f, 0.1f, 0.6f, 0.8f),
                EmotionTypes.Disgust => new Color(0.1f, 0.6f, 0.2f, 0.8f),
                EmotionTypes.Trust => new Color(0f, 0.6f, 0.9f, 0.8f),
                EmotionTypes.Anticipation => new Color(1f, 0.5f, 0f, 0.8f),
                EmotionTypes.Surprise => new Color(0.8f, 0.4f, 0.9f, 0.8f),
                EmotionTypes.Love => new Color(0.95f, 0.3f, 0.6f, 0.8f),
                EmotionTypes.Anxiety => new Color(0.7f, 0.7f, 0.7f, 0.8f),
                EmotionTypes.Neutral => new Color(0.9f, 0.9f, 0.9f, 0.8f),
                _ => Color.white
            };
        }

        private static string GetEmotionDisplayName(EmotionTypes emotionType)
        {
            return emotionType switch
            {
                EmotionTypes.Joy => "–†–∞–¥–æ—Å—Ç—å",
                EmotionTypes.Sadness => "–ì—Ä—É—Å—Ç—å",
                EmotionTypes.Anger => "–ì–Ω–µ–≤",
                EmotionTypes.Fear => "–°—Ç—Ä–∞—Ö",
                EmotionTypes.Disgust => "–û—Ç–≤—Ä–∞—â–µ–Ω–∏–µ",
                EmotionTypes.Trust => "–î–æ–≤–µ—Ä–∏–µ",
                EmotionTypes.Anticipation => "–ü—Ä–µ–¥–≤–∫—É—à–µ–Ω–∏–µ",
                EmotionTypes.Surprise => "–£–¥–∏–≤–ª–µ–Ω–∏–µ",
                EmotionTypes.Love => "–õ—é–±–æ–≤—å",
                EmotionTypes.Anxiety => "–¢—Ä–µ–≤–æ–≥–∞",
                EmotionTypes.Neutral => "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ",
                _ => emotionType.ToString()
            };
        }
        #endregion
    }
}
#endif