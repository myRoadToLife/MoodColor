#if UNITY_EDITOR
using UnityEngine;
using UnityEditor;
using UnityEngine.UI;
using TMPro;
// using App.Develop.Scenes.PersonalAreaScene.UI.Components; // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å, –µ—Å–ª–∏ —ç—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –µ—â–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏ –ø—É—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã
// using App.App.Develop.Scenes.PersonalAreaScene.UI.Components; // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å
using System.Collections; // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è? –ï—Å–ª–∏ –Ω–µ—Ç, –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å
using System.IO; // –î–ª—è Path.Combine –∏ Directory

namespace App.Editor.Generators.UI.Canvases // –ò–∑–º–µ–Ω–µ–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º–µ–Ω
{
    public class PersonalAreaCanvasGenerator // –ö–ª–∞—Å—Å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω
    {
        // private const string RESOURCES_FOLDER = "Assets/App/Resources"; // –ë–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        // private const string UI_FOLDER = RESOURCES_FOLDER + "/UI"; // –ë–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        // private const string PREFAB_PATH = UI_FOLDER + "/PersonalAreaCanvas.prefab"; // –°—Ç–∞—Ä—ã–π –ø—É—Ç—å

        private const string PREFAB_SAVE_FOLDER_PATH = "Assets/App/Prefabs/Generated/UI/Canvases/";
        private const string PREFAB_NAME = "PersonalAreaCanvas";

        // –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å—Ç–∏–ª—è MoodRoom (–æ—Å—Ç–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏)
        private static readonly Color WarmWoodLight = new Color(0.9f, 0.8f, 0.7f, 1f); 
        private static readonly Color WarmWoodMedium = new Color(0.82f, 0.71f, 0.55f, 1f); 
        private static readonly Color WarmWoodDark = new Color(0.7f, 0.6f, 0.45f, 1f); 
        private static readonly Color WoodDarkBrown = new Color(0.6f, 0.5f, 0.35f, 1f); 
        private static readonly Color TextDark = new Color(0.25f, 0.2f, 0.15f, 1f); 
        private static readonly Color PaperBeige = new Color(0.95f, 0.9f, 0.8f, 1f); 
        private static readonly Color GlassBlue = new Color(0.7f, 0.85f, 0.9f, 0.3f); 

        [MenuItem("MoodColor/Generate/UI Canvases/Personal Area Canvas")] // –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π –ø—É—Ç—å –≤ –º–µ–Ω—é
        public static void GeneratePrefab()
        {
            Debug.Log("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–µ—Ñ–∞–±–∞ Personal Area Canvas...");

            // –ü–∞–ø–∫–∏ –¥–ª—è —Ä–µ—Å—É—Ä—Å–æ–≤ –±–æ–ª—å—à–µ –Ω–µ —Å–æ–∑–¥–∞–µ–º –∑–¥–µ—Å—å, —Ç.–∫. –ø—Ä–µ—Ñ–∞–± —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ
            // if (!AssetDatabase.IsValidFolder(RESOURCES_FOLDER))
            //     AssetDatabase.CreateFolder("Assets/App", "Resources");
            // if (!AssetDatabase.IsValidFolder(UI_FOLDER))
            //     AssetDatabase.CreateFolder(RESOURCES_FOLDER, "UI");

            var root = CreateUIObject("PersonalAreaCanvas", null);
            root.AddComponent<Canvas>().renderMode = RenderMode.ScreenSpaceOverlay;

            var scaler = root.AddComponent<CanvasScaler>();
            scaler.uiScaleMode = CanvasScaler.ScaleMode.ScaleWithScreenSize;
            scaler.referenceResolution = new Vector2(1080, 1920);
            scaler.screenMatchMode = CanvasScaler.ScreenMatchMode.MatchWidthOrHeight;
            scaler.matchWidthOrHeight = 0.5f;

            root.AddComponent<GraphicRaycaster>();

            var background = CreateUIObject("RoomBackground", root.transform);
            var backgroundRect = background.GetComponent<RectTransform>();
            SetFullStretch(backgroundRect);
            var backgroundImage = background.AddComponent<Image>();
            backgroundImage.color = WarmWoodLight;

            var windowFrame = CreateUIObject("WindowFrame", background.transform);
            var windowFrameRect = windowFrame.GetComponent<RectTransform>();
            windowFrameRect.anchorMin = new Vector2(0.5f, 0.5f);
            windowFrameRect.anchorMax = new Vector2(0.5f, 0.5f);
            windowFrameRect.sizeDelta = new Vector2(600, 400);
            windowFrameRect.anchoredPosition = new Vector2(0, 300);
            var windowFrameImage = windowFrame.AddComponent<Image>();
            windowFrameImage.color = WarmWoodDark;

            var windowView = CreateUIObject("WindowView", windowFrame.transform);
            var windowViewRect = windowView.GetComponent<RectTransform>();
            windowViewRect.anchorMin = new Vector2(0, 0);
            windowViewRect.anchorMax = new Vector2(1, 1);
            windowViewRect.sizeDelta = new Vector2(-40, -40);
            windowViewRect.anchoredPosition = Vector2.zero;
            var windowViewImage = windowView.AddComponent<Image>();
            windowViewImage.color = GlassBlue;

            var shelf = CreateUIObject("WoodenShelf", background.transform);
            var shelfRect = shelf.GetComponent<RectTransform>();
            shelfRect.anchorMin = new Vector2(0, 0);
            shelfRect.anchorMax = new Vector2(1, 0);
            shelfRect.sizeDelta = new Vector2(0, 30);
            shelfRect.anchoredPosition = new Vector2(0, 500);
            var shelfImage = shelf.AddComponent<Image>();
            shelfImage.color = WoodDarkBrown;

            var safeArea = CreateUIObject("SafeArea", root.transform);
            var safeAreaRect = safeArea.GetComponent<RectTransform>();
            SetFullStretch(safeAreaRect);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ App.Develop.Scenes.PersonalAreaScene.UI.SafeArea
            // –≠—Ç–æ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –µ–≥–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ª–∏–±–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏/—Å–¥–µ–ª–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–º,
            // –ª–∏–±–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –æ–±—â—É—é –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∫—Ä–∏—Ç–∏—á–µ–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∫–∞–∫ —Ç–∞–∫–æ–≤–æ–≥–æ.
            // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –∫–∞–∫ –µ—Å—Ç—å, –Ω–æ —ç—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞.
            System.Type safeAreaType = System.Type.GetType("App.Develop.Scenes.PersonalAreaScene.UI.SafeArea, Assembly-CSharp");
            if (safeAreaType != null)
            {
                if (safeArea.GetComponent(safeAreaType) == null)
                {
                    safeArea.AddComponent(safeAreaType);
                    Debug.Log("[PersonalAreaCanvasGenerator] Added SafeArea component.");
                }
            }
            else
            {
                Debug.LogWarning("[PersonalAreaCanvasGenerator] SafeArea script (App.Develop.Scenes.PersonalAreaScene.UI.SafeArea) not found. This might be an issue if the component is critical.");
            }

            var mainContent = CreateUIObject("MainContent", safeArea.transform);
            var mainContentRect = mainContent.GetComponent<RectTransform>();
            SetFullStretch(mainContentRect);

            var mainLayout = mainContent.AddComponent<VerticalLayoutGroup>();
            mainLayout.padding = new RectOffset(40, 40, 60, 40);
            mainLayout.spacing = 20; 
            mainLayout.childAlignment = TextAnchor.UpperCenter;
            mainLayout.childControlHeight = true; 
            mainLayout.childControlWidth = true;
            mainLayout.childForceExpandHeight = true; 
            mainLayout.childForceExpandWidth = true;

            Debug.Log("üîÑ –°–æ–∑–¥–∞–µ–º UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã...");
            // –≠—Ç–∏ –≤—ã–∑–æ–≤—ã —Å–æ–∑–¥–∞—é—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —á–∞—Å—Ç–∏ UI. –ò—Ö –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
            // var profileInfo = CreateProfileInfo(mainContent.transform);
            // var emotionJars = CreateEmotionJars(mainContent.transform);
            // var statistics = CreateStatistics(mainContent.transform);
            // var navigation = CreateNavigation(mainContent.transform);
            
            // –ó–ê–ì–õ–£–®–ö–ò –¥–ª—è ProfileInfo, EmotionJars, Statistics, Navigation, —á—Ç–æ–±—ã –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–ª
            var profileInfo = new GameObject("ProfileInfo_Placeholder"); profileInfo.transform.SetParent(mainContent.transform);
            var emotionJars = new GameObject("EmotionJars_Placeholder"); emotionJars.transform.SetParent(mainContent.transform);
            var statistics = new GameObject("Statistics_Placeholder"); statistics.transform.SetParent(mainContent.transform);
            var navigation = new GameObject("Navigation_Placeholder"); navigation.transform.SetParent(mainContent.transform);
            // –î–æ–±–∞–≤–∏–º –∏–º LayoutElement, —á—Ç–æ–±—ã VerticalLayoutGroup –∏—Ö —É—á–∏—Ç—ã–≤–∞–ª
            profileInfo.AddComponent<LayoutElement>().preferredHeight = 150;
            emotionJars.AddComponent<LayoutElement>().preferredHeight = 300;
            statistics.AddComponent<LayoutElement>().preferredHeight = 200;
            navigation.AddComponent<LayoutElement>().preferredHeight = 100;


            Debug.Log("üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã...");
            // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç PersonalAreaManager –∏ PersonalAreaUIController.
            // –ò—Ö –Ω—É–∂–Ω–æ –ª–∏–±–æ –æ—Å—Ç–∞–≤–∏—Ç—å, –µ—Å–ª–∏ –æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è —á–∞—Å—Ç—å—é –ø—Ä–µ—Ñ–∞–±–∞ –∫–∞–Ω–≤–∞—Å–∞,
            // –ª–∏–±–æ –≤—ã–Ω–µ—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –Ω–∞ —Å—Ü–µ–Ω–µ –æ—Ç–¥–µ–ª—å–Ω–æ.
            // var manager = root.AddComponent<PersonalAreaManager>();
            // var uiController = root.AddComponent<PersonalAreaUIController>();

            // serializedManager.FindProperty("_ui").objectReferenceValue = uiController;
            // serializedManager.ApplyModifiedProperties();

            // serializedUI.FindProperty("_profileInfo").objectReferenceValue = profileInfo.GetComponent<ProfileInfoComponent>();
            // serializedUI.FindProperty("_emotionJars").objectReferenceValue = emotionJars.GetComponent<EmotionJarView>();
            // serializedUI.FindProperty("_statistics").objectReferenceValue = statistics.GetComponent<StatisticsView>();
            // serializedUI.FindProperty("_navigation").objectReferenceValue = navigation.GetComponent<NavigationComponent>();
            // serializedUI.ApplyModifiedProperties();

            Debug.Log($"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ—Ñ–∞–± –≤ {Path.Combine(PREFAB_SAVE_FOLDER_PATH, PREFAB_NAME + ".prefab")}");
            SaveGeneratedPrefab(root, PREFAB_SAVE_FOLDER_PATH, PREFAB_NAME);

            if (!Application.isPlaying) Object.DestroyImmediate(root);

            Debug.Log("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ñ–∞–±–∞ Personal Area Canvas –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
        }

        // –ú–µ—Ç–æ–¥—ã CreateProfileInfo, CreateEmotionJars –∏ —Ç.–¥. –æ—Å—Ç–∞—é—Ç—Å—è –∑–¥–µ—Å—å, —Ç.–∫. –æ–Ω–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–≤–∞—Å–∞.
        // ... (–≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞, –≤–∫–ª—é—á–∞—è —Ö–µ–ª–ø–µ—Ä—ã –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å SafeArea) ...
        // –í–∞–∂–Ω–æ: –ú–µ—Ç–æ–¥ SaveAsPrefab –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ SaveGeneratedPrefab
        // –∏ –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ –ª–æ–≥–∏–∫—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—É—Ç–µ–π –∏ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

        private static GameObject CreateProfileInfo(Transform parent) { /* ... implementation ... */ return new GameObject("ProfileInfo_Generated"); }
        private static GameObject CreateEmotionJars(Transform parent) { /* ... implementation ... */ return new GameObject("EmotionJars_Generated"); }
        private static GameObject CreateStatistics(Transform parent) { /* ... implementation ... */ return new GameObject("Statistics_Generated"); }
        private static GameObject CreateNavigation(Transform parent) { /* ... implementation ... */ return new GameObject("Navigation_Generated"); }

        private static GameObject CreateUIObject(string name, Transform parent)
        {
            var uiObject = new GameObject(name, typeof(RectTransform));
            uiObject.transform.SetParent(parent, false);
            return uiObject;
        }

        private static void SetFullStretch(RectTransform rect)
        {
            rect.anchorMin = Vector2.zero;
            rect.anchorMax = Vector2.one;
            rect.offsetMin = Vector2.zero;
            rect.offsetMax = Vector2.zero;
        }
        
        // ... (–î—Ä—É–≥–∏–µ —Ö–µ–ª–ø–µ—Ä—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è CreateUIObject, SetFullStretch –∏ —Ç.–¥.)

        // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–∑ UIComponentGenerator
        private static void SaveGeneratedPrefab(GameObject rootGameObject, string folderPath, string prefabName)
        {
            if (rootGameObject == null)
            {
                Debug.LogError("[PersonalAreaCanvasGenerator] Root GameObject is null. Cannot save prefab.");
                return;
            }
            if (string.IsNullOrEmpty(folderPath) || string.IsNullOrEmpty(prefabName))
            {
                Debug.LogError("[PersonalAreaCanvasGenerator] Folder path or prefab name is null or empty. Cannot save prefab.");
                return;
            }
            if (!Directory.Exists(folderPath))
            {
                Directory.CreateDirectory(folderPath);
                AssetDatabase.Refresh();
            }
            string fullPath = Path.Combine(folderPath, prefabName + ".prefab");
            GameObject existingPrefab = AssetDatabase.LoadAssetAtPath<GameObject>(fullPath);
            if (existingPrefab != null)
            {
                Debug.LogWarning($"[PersonalAreaCanvasGenerator] Prefab already exists at {fullPath}. It will be overwritten.");
            }
            bool prefabSuccess;
            PrefabUtility.SaveAsPrefabAsset(rootGameObject, fullPath, out prefabSuccess);
            if (prefabSuccess)
            {
                Debug.Log($"[PersonalAreaCanvasGenerator] Prefab '{prefabName}' saved successfully to: {fullPath}");
            }
            else
            {
                Debug.LogError($"[PersonalAreaCanvasGenerator] Failed to save prefab '{prefabName}' to {fullPath}. Check for errors in the console.");
            }
        }

        // –û—Å—Ç–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å SafeArea –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω, –ø–æ—Ö–æ–∂–µ, —Ç–µ—Å–Ω–æ —Å–≤—è–∑–∞–Ω —Å —ç—Ç–∏–º –∫–∞–Ω–≤–∞—Å–æ–º
        // –ï—Å–ª–∏ –æ–Ω —Å—Ç–∞–Ω–µ—Ç –±–æ–ª–µ–µ –æ–±—â–∏–º, –µ–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–Ω–µ—Å—Ç–∏
        public class SafeArea : MonoBehaviour
        {
            private RectTransform _rectTransform;
            private Rect _safeArea;
            private Vector2 _minAnchor;
            private Vector2 _maxAnchor;

            private void Awake()
            {
                _rectTransform = GetComponent<RectTransform>();
                _safeArea = Screen.safeArea;
                _minAnchor = _safeArea.position;
                _maxAnchor = _safeArea.position + _safeArea.size;

                _minAnchor.x /= Screen.width;
                _minAnchor.y /= Screen.height;
                _maxAnchor.x /= Screen.width;
                _maxAnchor.y /= Screen.height;

                _rectTransform.anchorMin = _minAnchor;
                _rectTransform.anchorMax = _maxAnchor;
                ApplySafeArea(); // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Å—Ä–∞–∑—É
            }

            private void ApplySafeArea()
            {
                if (_rectTransform == null) return;
                var safeAreaRect = Screen.safeArea;
                var newAnchorMin = safeAreaRect.position;
                var newAnchorMax = safeAreaRect.position + safeAreaRect.size;
                newAnchorMin.x /= Screen.width;
                newAnchorMin.y /= Screen.height;
                newAnchorMax.x /= Screen.width;
                newAnchorMax.y /= Screen.height;
                _rectTransform.anchorMin = newAnchorMin;
                _rectTransform.anchorMax = newAnchorMax;
            }

            private void OnValidate() // –î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
            {
                if (_rectTransform == null) _rectTransform = GetComponent<RectTransform>();
                ApplySafeArea();
            } 
        }        
    }
}
#endif 