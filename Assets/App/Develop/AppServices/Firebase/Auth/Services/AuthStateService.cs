using System;
using System.Threading.Tasks;
using App.Develop.AppServices.Firebase.Common.SecureStorage;
using Firebase.Auth;
using UnityEngine;

namespace App.Develop.AppServices.Firebase.Auth.Services
{
    /// <summary>
    /// –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Firebase.
    /// –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏.
    /// </summary>
    public class AuthStateService
    {
        private readonly FirebaseAuth _auth;
        private readonly IAuthService _authService;
        
        private bool _isInitialized = false;
        private bool _isListeningAuthState = false;
        
        // –°–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        public event Action<FirebaseUser> AuthStateChanged;
        
        // –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        public FirebaseUser CurrentUser => _auth?.CurrentUser;
        
        // –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        public bool IsAuthenticated => CurrentUser != null;

        public AuthStateService(FirebaseAuth auth, IAuthService authService)
        {
            _auth = auth ?? throw new ArgumentNullException(nameof(auth));
            _authService = authService ?? throw new ArgumentNullException(nameof(authService));
            
            Initialize();
        }
        
        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å –∏ –Ω–∞—á–∏–Ω–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        /// </summary>
        private void Initialize()
        {
            if (_isInitialized) return;
            
            StartListeningAuthState();
            _isInitialized = true;
            Debug.Log("‚úÖ AuthStateService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
        }
        
        /// <summary>
        /// –ù–∞—á–∏–Ω–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        /// </summary>
        private void StartListeningAuthState()
        {
            if (_isListeningAuthState) return;
            
            _auth.StateChanged += HandleAuthStateChanged;
            _isListeningAuthState = true;
            Debug.Log("‚úÖ –ù–∞—á–∞—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏");
        }
        
        /// <summary>
        /// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        /// </summary>
        private void HandleAuthStateChanged(object sender, EventArgs args)
        {
            FirebaseUser user = _auth.CurrentUser;
            
            if (user == null)
            {
                Debug.Log("üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            }
            else
            {
                Debug.Log($"üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.Email} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
            }
            
            // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –æ —Å–º–µ–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            AuthStateChanged?.Invoke(user);
        }
        
        /// <summary>
        /// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        /// </summary>
        public void StopListeningAuthState()
        {
            if (!_isListeningAuthState) return;
            
            _auth.StateChanged -= HandleAuthStateChanged;
            _isListeningAuthState = false;
            Debug.Log("‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏");
        }
        
        /// <summary>
        /// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        /// </summary>
        public async Task<bool> RestoreAuthenticationAsync()
        {
            try
            {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                if (IsAuthenticated)
                {
                    Debug.Log($"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {CurrentUser.Email}");
                    return true;
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                bool rememberMe = SecurePlayerPrefs.GetBool("remember_me", false);
                string savedEmail = SecurePlayerPrefs.GetString("email", "");
                string savedPassword = SecurePlayerPrefs.GetString("password", "");
                
                if (!rememberMe || string.IsNullOrEmpty(savedEmail) || string.IsNullOrEmpty(savedPassword))
                {
                    Debug.Log("‚ö†Ô∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏");
                    return false;
                }
                
                Debug.Log($"üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è: {savedEmail}");
                
                // –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                var result = await _authService.LoginUser(savedEmail, savedPassword);
                
                if (result.success)
                {
                    Debug.Log("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
                    return true;
                }
                else
                {
                    Debug.LogWarning($"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é: {result.error}");
                    return false;
                }
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {ex.Message}");
                return false;
            }
        }

        /// <summary>
        /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        /// </summary>
        public async Task<bool> RefreshUserAsync()
        {
            try
            {
                if (CurrentUser == null)
                {
                    Debug.LogWarning("‚ö†Ô∏è –ù–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è");
                    return false;
                }
                
                await CurrentUser.ReloadAsync();
                Debug.Log($"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {CurrentUser.Email} –æ–±–Ω–æ–≤–ª–µ–Ω–∞");
                return true;
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {ex.Message}");
                return false;
            }
        }
        
        /// <summary>
        /// –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
        /// </summary>
        ~AuthStateService()
        {
            StopListeningAuthState();
        }
    }
} 