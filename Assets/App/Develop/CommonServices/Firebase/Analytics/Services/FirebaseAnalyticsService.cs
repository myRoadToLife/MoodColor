using System;
using System.Collections.Generic;
using Firebase.Analytics;
using App.Develop.Utils.Logging;

namespace App.Develop.CommonServices.Firebase.Analytics.Services
{
    /// <summary>
    /// –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Firebase Analytics
    /// </summary>
    public class FirebaseAnalyticsService : IFirebaseAnalyticsService
    {
        #region Private Fields
        private bool _isInitialized;
        #endregion

        #region Constructor
        /// <summary>
        /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ Firebase Analytics
        /// </summary>
        public FirebaseAnalyticsService()
        {
            try
            {
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Firebase Analytics –ø—É—Ç–µ–º –≤—ã–∑–æ–≤–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞
                // –ï—Å–ª–∏ Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –±—É–¥–µ—Ç –≤—ã–±—Ä–æ—à–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
                FirebaseAnalytics.SetAnalyticsCollectionEnabled(true);
                _isInitialized = true;
                MyLogger.Log("‚úÖ FirebaseAnalyticsService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                _isInitialized = false;
                MyLogger.LogWarning($"‚ö†Ô∏è FirebaseAnalyticsService –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }
        #endregion

        #region IFirebaseAnalyticsService Implementation
        /// <summary>
        /// –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
        /// </summary>
        /// <param name="eventName">–ò–º—è —Å–æ–±—ã—Ç–∏—è</param>
        public void LogEvent(string eventName)
        {
            if (!_isInitialized || string.IsNullOrEmpty(eventName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–µ –∏–º—è —Å–æ–±—ã—Ç–∏—è. –°–æ–±—ã—Ç–∏–µ {eventName} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.LogEvent(eventName);
                MyLogger.Log($"üìä [Analytics] –°–æ–±—ã—Ç–∏–µ: {eventName}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è {eventName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
        /// </summary>
        /// <param name="eventName">–ò–º—è —Å–æ–±—ã—Ç–∏—è</param>
        /// <param name="parameterName">–ò–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞</param>
        /// <param name="parameterValue">–ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞</param>
        public void LogEvent(string eventName, string parameterName, string parameterValue)
        {
            if (!_isInitialized || string.IsNullOrEmpty(eventName) || string.IsNullOrEmpty(parameterName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –°–æ–±—ã—Ç–∏–µ {eventName} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.LogEvent(eventName, parameterName, parameterValue);
                MyLogger.Log($"üìä [Analytics] –°–æ–±—ã—Ç–∏–µ: {eventName}, –ü–∞—Ä–∞–º–µ—Ç—Ä: {parameterName}={parameterValue}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è {eventName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
        /// </summary>
        /// <param name="eventName">–ò–º—è —Å–æ–±—ã—Ç–∏—è</param>
        /// <param name="parameterName">–ò–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞</param>
        /// <param name="parameterValue">–ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞</param>
        public void LogEvent(string eventName, string parameterName, double parameterValue)
        {
            if (!_isInitialized || string.IsNullOrEmpty(eventName) || string.IsNullOrEmpty(parameterName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –°–æ–±—ã—Ç–∏–µ {eventName} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.LogEvent(eventName, parameterName, parameterValue);
                MyLogger.Log($"üìä [Analytics] –°–æ–±—ã—Ç–∏–µ: {eventName}, –ü–∞—Ä–∞–º–µ—Ç—Ä: {parameterName}={parameterValue}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è {eventName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
        /// </summary>
        /// <param name="eventName">–ò–º—è —Å–æ–±—ã—Ç–∏—è</param>
        /// <param name="parameterName">–ò–º—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞</param>
        /// <param name="parameterValue">–ó–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞</param>
        public void LogEvent(string eventName, string parameterName, long parameterValue)
        {
            if (!_isInitialized || string.IsNullOrEmpty(eventName) || string.IsNullOrEmpty(parameterName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –°–æ–±—ã—Ç–∏–µ {eventName} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.LogEvent(eventName, parameterName, parameterValue);
                MyLogger.Log($"üìä [Analytics] –°–æ–±—ã—Ç–∏–µ: {eventName}, –ü–∞—Ä–∞–º–µ—Ç—Ä: {parameterName}={parameterValue}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è {eventName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        /// </summary>
        /// <param name="eventName">–ò–º—è —Å–æ–±—ã—Ç–∏—è</param>
        /// <param name="parameters">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–±—ã—Ç–∏—è</param>
        public void LogEvent(string eventName, Parameter[] parameters)
        {
            if (!_isInitialized || string.IsNullOrEmpty(eventName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–µ –∏–º—è —Å–æ–±—ã—Ç–∏—è. –°–æ–±—ã—Ç–∏–µ {eventName} –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.LogEvent(eventName, parameters);
                
                string parametersStr = "";
                if (parameters != null && parameters.Length > 0)
                {
                    var paramList = new List<string>();
                    foreach (var p in parameters)
                    {
                        // –í Firebase SDK –¥–ª—è Unity Parameter –Ω–µ –∏–º–µ–µ—Ç —Å–≤–æ–π—Å—Ç–≤ Name –∏ Value,
                        // –ø–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º ToString –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                        paramList.Add(p.ToString());
                    }
                    parametersStr = string.Join(", ", paramList);
                }
                
                MyLogger.Log($"üìä [Analytics] –°–æ–±—ã—Ç–∏–µ: {eventName}, –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {parametersStr}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–±—ã—Ç–∏—è {eventName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ
        /// </summary>
        /// <param name="propertyName">–ò–º—è —Å–≤–æ–π—Å—Ç–≤–∞</param>
        /// <param name="propertyValue">–ó–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞</param>
        public void SetUserProperty(string propertyName, string propertyValue)
        {
            if (!_isInitialized || string.IsNullOrEmpty(propertyName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–µ –∏–º—è —Å–≤–æ–π—Å—Ç–≤–∞. –°–≤–æ–π—Å—Ç–≤–æ {propertyName} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.SetUserProperty(propertyName, propertyValue);
                MyLogger.Log($"üìä [Analytics] –°–≤–æ–π—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {propertyName}={propertyValue}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {propertyName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        /// </summary>
        /// <param name="userId">–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</param>
        public void SetUserId(string userId)
        {
            if (!_isInitialized)
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.SetUserId(userId);
                MyLogger.Log($"üìä [Analytics] ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {userId}", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
        /// </summary>
        /// <param name="screenName">–ò–º—è —ç–∫—Ä–∞–Ω–∞</param>
        /// <param name="screenClass">–ö–ª–∞—Å—Å —ç–∫—Ä–∞–Ω–∞</param>
        public void SetCurrentScreen(string screenName, string screenClass)
        {
            if (!_isInitialized || string.IsNullOrEmpty(screenName))
            {
                MyLogger.LogWarning($"‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –ø—É—Å—Ç–æ–µ –∏–º—è —ç–∫—Ä–∞–Ω–∞. –≠–∫—Ä–∞–Ω {screenName} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                // –í Firebase SDK –¥–ª—è Unity –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å LogEvent —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º screen_name
                // –≤–º–µ—Å—Ç–æ SetCurrentScreen, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Android SDK
                FirebaseAnalytics.LogEvent(
                    FirebaseAnalytics.EventScreenView,
                    new Parameter(FirebaseAnalytics.ParameterScreenName, screenName),
                    new Parameter(FirebaseAnalytics.ParameterScreenClass, screenClass ?? "")
                );
                
                MyLogger.Log($"üìä [Analytics] –¢–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω: {screenName} ({screenClass})", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞ {screenName}: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }

        /// <summary>
        /// –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        /// </summary>
        public void ResetAnalyticsData()
        {
            if (!_isInitialized)
            {
                MyLogger.LogWarning("‚ö†Ô∏è Firebase Analytics –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–±—Ä–æ—à–µ–Ω—ã", MyLogger.LogCategory.Firebase);
                return;
            }

            try
            {
                FirebaseAnalytics.ResetAnalyticsData();
                MyLogger.Log("üìä [Analytics] –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã", MyLogger.LogCategory.Firebase);
            }
            catch (Exception ex)
            {
                MyLogger.LogError($"‚ùå [Analytics] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {ex.Message}", MyLogger.LogCategory.Firebase);
            }
        }
        #endregion
    }
} 