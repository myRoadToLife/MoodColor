using System;
using System.Threading.Tasks;
using System.Linq;
using App.Develop.CommonServices.Firebase.Auth;
using App.Develop.CommonServices.Firebase.Auth.Services;
using App.Develop.CommonServices.Firebase.Database.Services;
using App.Develop.CommonServices.Firebase.Database.Validators;
using App.Develop.CommonServices.Firebase.Database.Models;
using App.Develop.CommonServices.Firebase.Common.Cache;
using App.Develop.CommonServices.AssetManagement;
using App.Develop.CommonServices.ConfigsManagement;
using App.Develop.CommonServices.CoroutinePerformer;
using App.Develop.CommonServices.DataManagement;
using App.Develop.CommonServices.DataManagement.DataProviders;
using App.Develop.CommonServices.Emotion;
using App.Develop.CommonServices.GameSystem;
using App.Develop.CommonServices.LoadingScreen;
using App.Develop.CommonServices.SceneManagement;
using App.Develop.CommonServices.UI;
using App.Develop.DI;
using App.Develop.Scenes.PersonalAreaScene;
using App.Develop.Scenes.PersonalAreaScene.Settings;
using App.Develop.Scenes.PersonalAreaScene.UI;
using Firebase;
using Firebase.Auth;
using Firebase.Database;
using UnityEngine;
using App.Develop.UI.Panels;
using App.Develop.Scenes.PersonalAreaScene.UI.Components;
using App.Develop.CommonServices.Networking;
using App.Develop.CommonServices.Social; // –î–ª—è ConnectivityManager

// –ò—Å–ø–æ–ª—å–∑—É–µ–º IDatabaseService —Ç–æ–ª—å–∫–æ –∏–∑ —ç—Ç–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º–µ–Ω
using IDatabaseService = App.Develop.CommonServices.Firebase.Database.Services.IDatabaseService;

namespace App.Develop.EntryPoint
{
    /// <summary>
    /// –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤.
    /// </summary>
    public class EntryPoint : MonoBehaviour
    {
        [SerializeField] private Bootstrap _appBootstrap;
        private const string DATABASE_URL = "https://moodcolor-3ac59-default-rtdb.firebaseio.com/";
        private const string FIREBASE_APP_NAME = "MoodColorApp"; // –ò–º—è –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Firebase
        
        private DIContainer _projectContainer;
        private FirebaseApp _firebaseApp; // –•—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–∞—à —ç–∫–∑–µ–º–ø–ª—è—Ä Firebase
        private FirebaseDatabase _firebaseDatabase; // –•—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

        private void Awake()
        {
            DontDestroyOnLoad(gameObject);
            InitializeApplication();
        }

        /// <summary>
        /// –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        /// </summary>
        private async void InitializeApplication()
        {
            try
            {
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                SetupAppSettings();

                // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
                _projectContainer = new DIContainer();
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SecurePlayerPrefs –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Å–µ—Ä–≤–∏—Å–æ–≤
                InitializeSecureStorage(_projectContainer);
                
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
                RegisterCoreServices(_projectContainer);

                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                ShowInitialLoadingScreen();

                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
                if (!await InitFirebaseAsync())
                {
                    Debug.LogError("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Firebase");
                    return;
                }

                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤, –∑–∞–≤–∏—Å—è—â–∏—Ö –æ—Ç Firebase
                RegisterFirebaseServices();
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                InitializeContainerAndLoadData();
                
                // –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                StartBootstrapProcess();
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {ex}");
            }
        }

        /// <summary>
        /// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        /// </summary>
        private void SetupAppSettings()
        {
            QualitySettings.vSyncCount = 0;
            Application.targetFrameRate = 60;
            Debug.Log("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã");
        }

        /// <summary>
        /// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
        /// </summary>
        private void ShowInitialLoadingScreen()
        {
            ILoadingScreen loadingScreen = _projectContainer.Resolve<ILoadingScreen>();
            loadingScreen.Show();
        }

        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç Firebase –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        /// </summary>
        private async Task<bool> InitFirebaseAsync()
        {
            try
            {
                Debug.Log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...");
                
                // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã —Å –Ω–∞—à–∏–º –∏–º–µ–Ω–µ–º, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                try
                {
                    var existingApp = FirebaseApp.GetInstance(FIREBASE_APP_NAME);
                    if (existingApp != null)
                    {
                        existingApp.Dispose();
                        Debug.Log($"–£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä Firebase —Å –∏–º–µ–Ω–µ–º {FIREBASE_APP_NAME}");
                    }
                }
                catch (Exception)
                {
                    // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞
                }
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
                var dependencyTask = FirebaseApp.CheckAndFixDependenciesAsync();
                await dependencyTask;

                var dependencyStatus = dependencyTask.Result;
                if (dependencyStatus != DependencyStatus.Available)
                {
                    Debug.LogError($"‚ùå Firebase –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω: {dependencyStatus}");
                    return false;
                }
                
                // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Firebase —Å –Ω–∞—à–∏–º URL
                var options = new Firebase.AppOptions
                {
                    DatabaseUrl = new Uri(DATABASE_URL)
                };
                
                _firebaseApp = FirebaseApp.Create(options, FIREBASE_APP_NAME);
                Debug.Log($"‚úÖ –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä Firebase —Å –∏–º–µ–Ω–µ–º {FIREBASE_APP_NAME} –∏ URL: {DATABASE_URL}");
                
                // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –Ω–∞—à–∏–º Firebase App –∏ URL
                _firebaseDatabase = FirebaseDatabase.GetInstance(_firebaseApp, DATABASE_URL);
                _firebaseDatabase.SetPersistenceEnabled(true);
                Debug.Log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
                
                return true;
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase: {ex.Message}");
                return false;
            }
        }

        /// <summary>
        /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã, –∑–∞–≤–∏—Å—è—â–∏–µ –æ—Ç Firebase
        /// </summary>
        private void RegisterFirebaseServices()
        {
            RegisterFirebase(_projectContainer);
            RegisterAuthServices(_projectContainer);
            
            // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
            _projectContainer.RegisterAsSingle<ISocialService>(container =>
            {
                var socialServiceObject = new GameObject("FirebaseSocialService");
                DontDestroyOnLoad(socialServiceObject);
                var socialService = socialServiceObject.AddComponent<FirebaseSocialService>();
                
                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ Firebase
                socialService.Initialize(
                    container.Resolve<FirebaseDatabase>(),
                    container.Resolve<FirebaseAuth>()
                );
                
                return socialService;
            }).NonLazy();
            
            Debug.Log("‚úÖ –°–æ—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω");
        }

        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ
        /// </summary>
        private void InitializeContainerAndLoadData()
        {
            RegisterPersonalAreaServices(_projectContainer);
            _projectContainer.Initialize();
            _projectContainer.Resolve<PlayerDataProvider>().Load();
        }

        /// <summary>
        /// –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        /// </summary>
        private void StartBootstrapProcess()
        {
            _projectContainer.Resolve<ICoroutinePerformer>()
                .StartCoroutine(_appBootstrap.Run(_projectContainer));
        }

        /// <summary>
        /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        /// </summary>
        private void RegisterCoreServices(DIContainer container)
        {
            try
            {
                // –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ä–µ—Å—É—Ä—Å–æ–≤
                container.RegisterAsSingle(container => new ResourcesAssetLoader());

                // –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∫–æ—Ä—É—Ç–∏–Ω
                container.RegisterAsSingle<ICoroutinePerformer>(container =>
                    CoroutinePerformerFactory.Create()
                );

                // –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
                container.RegisterAsSingle<ILoadingScreen>(container =>
                    Instantiate(container.Resolve<ResourcesAssetLoader>().LoadAsset<LoadingScreen>(AssetPaths.LoadingScreen))
                );

                // –ó–∞–≥—Ä—É–∑—á–∏–∫ —Å—Ü–µ–Ω
                container.RegisterAsSingle<ISceneLoader>(container => new SceneLoader());

                // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å—Ü–µ–Ω
                container.RegisterAsSingle(container =>
                    new SceneSwitcher(
                        container.Resolve<ICoroutinePerformer>(),
                        container.Resolve<ILoadingScreen>(),
                        container.Resolve<ISceneLoader>(),
                        container
                    )
                );

                // –°–µ—Ä–≤–∏—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/–∑–∞–≥—Ä—É–∑–∫–∏
                container.RegisterAsSingle<ISaveLoadService>(container =>
                    new SaveLoadService(new JsonSerializer(), new LocalDataRepository())
                );

                // –°–µ—Ä–≤–∏—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
                container.RegisterAsSingle(container =>
                    new ConfigsProviderService(container.Resolve<ResourcesAssetLoader>())
                ).NonLazy();
                
                // –¢–∞–∫–∂–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–∞–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                container.RegisterAsSingle<IConfigsProvider>(container =>
                    container.Resolve<ConfigsProviderService>()
                ).NonLazy();
                
                // –°–µ—Ä–≤–∏—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —ç–º–æ—Ü–∏–π
                container.RegisterAsSingle(container =>
                    new EmotionConfigService(container.Resolve<ResourcesAssetLoader>())
                ).NonLazy();

                // –ü—Ä–æ–≤–∞–π–¥–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞
                container.RegisterAsSingle(container =>
                    new PlayerDataProvider(
                        container.Resolve<ISaveLoadService>(),
                        container.Resolve<ConfigsProviderService>()
                    )
                );

                // –°–µ—Ä–≤–∏—Å —ç–º–æ—Ü–∏–π - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤,
                // —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã –æ—á–∫–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π
                container.RegisterAsSingle<EmotionService>(container =>
                    new EmotionService(
                        container.Resolve<PlayerDataProvider>(),
                        container.Resolve<IConfigsProvider>(),
                        container.Resolve<EmotionConfigService>(),
                        container.Resolve<IPointsService>(),
                        container.Resolve<ILevelSystem>()
                    )
                ).NonLazy();

                // –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–Ω–µ–ª–µ–π UI
                container.RegisterAsSingle(container =>
                    new PanelManager(
                        container.Resolve<ResourcesAssetLoader>(),
                        new MonoFactory(container)
                    )
                ).NonLazy();

                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –∏–≥—Ä–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
                RegisterGameSystem(container);

                Debug.Log("‚úÖ –ë–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: {ex}");
                throw;
            }
        }

        /// <summary>
        /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –∏–≥—Ä–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        /// </summary>
        private void RegisterGameSystem(DIContainer container)
        {
            // –°–µ—Ä–≤–∏—Å –æ—á–∫–æ–≤
            container.RegisterAsSingle<IPointsService>(container => 
                new PointsService(
                    container.Resolve<PlayerDataProvider>()
                )
            ).NonLazy();
            
            // –°–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π
            container.RegisterAsSingle<ILevelSystem>(container =>
                new LevelSystem(
                    container.Resolve<PlayerDataProvider>(),
                    container.Resolve<IPointsService>()
                )
            ).NonLazy();
            
            // –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (—Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é –æ—Ç —Å–∏—Å—Ç–µ–º—ã —É—Ä–æ–≤–Ω–µ–π)
            container.RegisterAsSingle<IAchievementService>(container => 
                new AchievementService(
                    container.Resolve<PlayerDataProvider>(),
                    container.Resolve<IPointsService>(),
                    container.Resolve<ILevelSystem>()
                )
            ).NonLazy();
            
            Debug.Log("‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å–µ—Ä–≤–∏—Å—ã –∏–≥—Ä–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã");
        }

        /// <summary>
        /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã Firebase –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        /// </summary>
        private void RegisterFirebase(DIContainer container)
        {
            try
            {
                if (_firebaseApp == null)
                {
                    throw new InvalidOperationException("Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
                }
                
                if (_firebaseDatabase == null)
                {
                    throw new InvalidOperationException("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
                }
                
                // –°–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Firebase
                container.RegisterAsSingle<FirebaseAuth>(container => FirebaseAuth.GetAuth(_firebaseApp)).NonLazy();
                
                // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –Ω–∞—à —ç–∫–∑–µ–º–ø–ª—è—Ä FirebaseApp
                container.RegisterAsSingle<FirebaseApp>(container => _firebaseApp).NonLazy();
                
                // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä FirebaseDatabase
                container.RegisterAsSingle<FirebaseDatabase>(container => _firebaseDatabase).NonLazy();

                // –°—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Firebase
                container.RegisterAsSingle<DatabaseReference>(container => _firebaseDatabase.RootReference).NonLazy();

                // –ú–µ–Ω–µ–¥–∂–µ—Ä –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è Firebase
                container.RegisterAsSingle<FirebaseCacheManager>(container => 
                    new FirebaseCacheManager(
                        container.Resolve<ISaveLoadService>()
                    )
                ).NonLazy();

                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —ç–º–æ—Ü–∏–π
                container.RegisterAsSingle<EmotionHistoryCache>(c => 
                    new EmotionHistoryCache(
                        c.Resolve<FirebaseCacheManager>()));
                
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
                container.RegisterAsSingle<DataValidationService>(c => {
                    Debug.Log("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö");
                    var validationService = new DataValidationService();
                    
                    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤
                    validationService.RegisterValidator(new EmotionHistoryRecordValidator());
                    validationService.RegisterValidator(new UserDataValidator());
                    
                    return validationService;
                }).NonLazy();
                
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ConnectivityManager –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ç—å—é
                container.RegisterAsSingle<ConnectivityManager>(c => 
                    new ConnectivityManager(
                        c.Resolve<ICoroutinePerformer>()
                    )
                ).NonLazy();
                
                // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Firebase
                container.RegisterAsSingle<IDatabaseService>(c => 
                    new DatabaseService(
                        c.Resolve<DatabaseReference>(),
                        c.Resolve<FirebaseCacheManager>(),
                        c.Resolve<DataValidationService>())
                ).NonLazy();
                
                // –¢–∞–∫–∂–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º DatabaseService –Ω–∞–ø—Ä—è–º—É—é (–¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–∏–ø)
                container.RegisterAsSingle<DatabaseService>(c => 
                    c.Resolve<IDatabaseService>() as DatabaseService
                ).NonLazy();
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                var syncSettings = new EmotionSyncSettings();
                
                // –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ (–∫–∞—Å—Ç–∏–º IDatabaseService –∫ DatabaseService, —Ç.–∫. —ç—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É)
                container.RegisterAsSingle<ConflictResolutionManager>(c => 
                    new ConflictResolutionManager(
                        c.Resolve<IDatabaseService>() as DatabaseService, // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–∞
                        syncSettings)
                ).NonLazy();
                    
                // –°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —ç–º–æ—Ü–∏–π (—ç—Ç–æ MonoBehaviour, —Å–æ–∑–¥–∞–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º)
                container.RegisterAsSingle<EmotionSyncService>(c => {
                    var syncService = new GameObject("EmotionSyncService").AddComponent<EmotionSyncService>();
                    
                    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
                    syncService.Initialize(
                        c.Resolve<IDatabaseService>(),
                        c.Resolve<EmotionHistoryCache>(),
                        c.Resolve<ConnectivityManager>());
                    
                    DontDestroyOnLoad(syncService.gameObject);
                    return syncService;
                }).NonLazy();

                Debug.Log("‚úÖ Firebase –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Firebase —Å–µ—Ä–≤–∏—Å–æ–≤: {ex.Message}");
                throw;
            }
        }

        /// <summary>
        /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        /// </summary>
        private void RegisterAuthServices(DIContainer container)
        {
            try
            {
                // –°–µ—Ä–≤–∏—Å –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                container.RegisterAsSingle<ValidationService>(container => new ValidationService()).NonLazy();

                // CredentialStorage —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ InitializeSecureStorage
                // –û—Å—Ç–∞–≤–∏–º —ç—Ç—É —á–∞—Å—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
                /*
                // –•—Ä–∞–Ω–∏–ª–∏—â–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                container.RegisterAsSingle<CredentialStorage>(container =>
                    new CredentialStorage("UltraSecretKey!üî•")
                ).NonLazy();
                */

                // –°–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                container.RegisterAsSingle<IAuthService>(container =>
                    new AuthService(
                        container.Resolve<FirebaseAuth>(),
                        container.Resolve<DatabaseService>(),
                        container.Resolve<ValidationService>()
                    )
                ).NonLazy();

                // –°–µ—Ä–≤–∏—Å –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                container.RegisterAsSingle<UserProfileService>(container =>
                    new UserProfileService(
                        container.Resolve<DatabaseService>()
                    )
                ).NonLazy();

                // –°–µ—Ä–≤–∏—Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
                container.RegisterAsSingle<IAuthStateService>(container =>
                    new AuthStateService(
                        container.Resolve<FirebaseAuth>(),
                        container.Resolve<IAuthService>()
                    )
                ).NonLazy();

                Debug.Log("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: {ex.Message}");
                throw;
            }
        }

        /// <summary>
        /// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
        /// </summary>
        private void RegisterPersonalAreaServices(DIContainer container)
        {
            try
            {
                // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º SettingsManager –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–∞–Ω–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                container.RegisterAsSingle<ISettingsManager>(container =>
                {
                    var settingsManager = new SettingsManager();
                    settingsManager.Inject(container);
                    return settingsManager;
                }).NonLazy();

                // –°–µ—Ä–≤–∏—Å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
                container.RegisterAsSingle<IPersonalAreaService>(container =>
                    new PersonalAreaService(
                        container.Resolve<EmotionService>(),
                        container.Resolve<IPointsService>()
                    )
                );
                
                // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º EmotionJarView —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º —Å–æ–∑–¥–∞–Ω–∏–µ–º
                container.RegisterAsSingle<EmotionJarView>(container =>
                {
                    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ—Ñ–∞–± —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ
                    // –õ–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É–ø—Ä–æ—â–µ–Ω–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º –Ω–∞ —ç—Ç–∞–ø–µ –∑–∞–≥—Ä—É–∑–∫–∏
                    Debug.Log("‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º EmotionJarView —á–µ—Ä–µ–∑ AssetPaths");
                    return Instantiate(container.Resolve<ResourcesAssetLoader>().LoadAsset<EmotionJarView>(AssetPaths.EmotionJarView));
                });

                Debug.Log("‚úÖ –°–µ—Ä–≤–∏—Å—ã –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞: {ex.Message}");
                throw;
            }
        }

        /// <summary>
        /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç SecurePlayerPrefs –¥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        /// </summary>
        private void InitializeSecureStorage(DIContainer container)
        {
            try
            {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∏–ø –±–µ–∑ –ø–æ–ª–Ω–æ–≥–æ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
                var credentialStorage = new CredentialStorage("UltraSecretKey!üî•");
                container.RegisterAsSingle<CredentialStorage>(c => credentialStorage).NonLazy();
                Debug.Log("‚úÖ SecurePlayerPrefs –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SecurePlayerPrefs: {ex.Message}");
                throw;
            }
        }
    }
}
