using System;
using System.Collections;
using App.Develop.CommonServices.AssetManagement;
using App.Develop.CommonServices.ConfigsManagement;
using App.Develop.CommonServices.DataManagement.DataProviders;
using App.Develop.CommonServices.Emotion;
using App.Develop.CommonServices.GameSystem;
using App.Develop.CommonServices.SceneManagement;
using App.Develop.DI;
using App.Develop.Scenes.PersonalAreaScene.Handlers;
using App.Develop.Scenes.PersonalAreaScene.UI;
using UnityEngine;

namespace App.Develop.Scenes.PersonalAreaScene.Infrastructure
{
    public class PersonalAreaBootstrap : MonoBehaviour
    {
        private DIContainer _container;

        public IEnumerator Run(DIContainer container, PersonalAreaInputArgs inputArgs)
        {
            try
            {
                if (container == null)
                {
                    Debug.LogError("‚ùå DIContainer –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å null");
                    yield break;
                }

                _container = container;
                
                Debug.Log("üîÑ [PersonalAreaBootstrap] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...");
                _container.Initialize();
                Debug.Log("‚úÖ [PersonalAreaBootstrap] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");

                Debug.Log("‚úÖ [PersonalAreaBootstrap] –°—Ü–µ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");

                // –ü—ã—Ç–∞–µ–º—Å—è —Ä–µ–∑–æ–ª–≤–∏—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ —Ä–µ—Å—É—Ä—Å–æ–≤
                Debug.Log("üîÑ [PersonalAreaBootstrap] –ü–æ–ª—É—á–µ–Ω–∏–µ ResourcesAssetLoader...");
                ResourcesAssetLoader assetLoader = null;
                try 
                {
                    assetLoader = _container.Resolve<ResourcesAssetLoader>();
                    Debug.Log("‚úÖ [PersonalAreaBootstrap] ResourcesAssetLoader –ø–æ–ª—É—á–µ–Ω");
                }
                catch (Exception e)
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û—à–∏–±–∫–∞ —Ä–µ–∑–æ–ª–≤–∞ ResourcesAssetLoader: {e.Message}\n{e.StackTrace}");
                    yield break;
                }

                var factory = new MonoFactory(_container);

                // –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –°–ï–†–í–ò–°–û–í –ü–ï–†–ï–î –ò–ù–°–¢–ê–ù–¶–ò–ò–†–û–í–ê–ù–ò–ï–ú UI
                Debug.Log("üîÑ [PersonalAreaBootstrap] –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ EmotionService...");
                bool emotionServiceRegistered = false;
                try
                {
                    // –ü–æ–ª—É—á–∞–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è EmotionService
                    var playerDataProvider = _container.Resolve<PlayerDataProvider>();
                    var configsProvider = _container.Resolve<IConfigsProvider>();
                    var emotionConfigService = _container.Resolve<EmotionConfigService>();

                    // –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è EmotionService
                    IPointsService pointsService = null;
                    try { pointsService = _container.Resolve<IPointsService>(); }
                    catch (InvalidOperationException) { Debug.LogWarning("[PersonalAreaBootstrap] IPointsService –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, EmotionService –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–µ–≥–æ."); }

                    ILevelSystem levelSystem = null;
                    try { levelSystem = _container.Resolve<ILevelSystem>(); }
                    catch (InvalidOperationException) { Debug.LogWarning("[PersonalAreaBootstrap] ILevelSystem –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, EmotionService –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –Ω–µ–≥–æ."); }

                    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º EmotionService –∫–∞–∫ —Å–∏–Ω–≥–ª—Ç–æ–Ω —Å —Ñ–∞–±—Ä–∏—á–Ω—ã–º –º–µ—Ç–æ–¥–æ–º
                    _container.RegisterAsSingle<IEmotionService>(c => 
                        new EmotionService(playerDataProvider, configsProvider, emotionConfigService, pointsService, levelSystem)
                    );
                    Debug.Log("‚úÖ [PersonalAreaBootstrap] EmotionService —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ RegisterAsSingle.");
                    emotionServiceRegistered = true;
                }
                catch (InvalidOperationException ioe) // –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ —Ä–µ–∑–æ–ª–≤–∞ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–£–Æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –¥–ª—è EmotionService: {ioe.Message}\n{ioe.StackTrace}");
                }
                catch (Exception e) // –õ–æ–≤–∏–º –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ EmotionService: {e.Message}\n{e.StackTrace}");
                }

                // –ï—Å–ª–∏ EmotionService –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–µ–Ω, –∏ –Ω–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
                // if (!emotionServiceRegistered)
                // {
                //     Debug.LogError("‚ùå [PersonalAreaBootstrap] EmotionService –Ω–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ü–µ–Ω—ã.");
                //     yield break;
                // }

                Debug.Log($"üîÑ [PersonalAreaBootstrap] –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ—Ñ–∞–±–∞ PersonalAreaCanvas –∏–∑ {AssetPaths.PersonalAreaCanvas}...");
                GameObject personalAreaPrefab = null;
                try
                {
                    personalAreaPrefab = assetLoader.LoadAsset<GameObject>(AssetPaths.PersonalAreaCanvas);
                }
                catch (Exception e)
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ—Ñ–∞–±–∞: {e.Message}\n{e.StackTrace}");
                    yield break;
                }

                if (personalAreaPrefab == null)
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ—Ñ–∞–± –ø–æ –ø—É—Ç–∏: {AssetPaths.PersonalAreaCanvas}");
                    yield break;
                }

                Debug.Log("‚úÖ [PersonalAreaBootstrap] –ü—Ä–µ—Ñ–∞–± PersonalAreaCanvas –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä...");
                GameObject instance = null;

                try
                {
                    instance = Instantiate(personalAreaPrefab);

                    JarInteractionHandler jarHandler = instance.GetComponentInChildren<JarInteractionHandler>(true);
                    if (jarHandler != null)
                    {
                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º _container, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –≤ –º–µ—Ç–æ–¥ Run
                        if (this._container != null) 
                        {
                            Debug.Log($"[PersonalAreaBootstrap] –ü—ã—Ç–∞–µ–º—Å—è –≤–Ω–µ–¥—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ JarInteractionHandler —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º: {this._container.GetHashCode()}");
                            jarHandler.Inject(this._container); 
                        }
                        else
                        {
                            Debug.LogError("[PersonalAreaBootstrap] DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, _activeSceneContainer) –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è JarInteractionHandler.Inject!");
                        }
                    }
                    else
                    {
                        Debug.LogWarning("[PersonalAreaBootstrap] JarInteractionHandler –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–µ PersonalAreaCanvas.");
                    }
                }
                catch (Exception e)
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–µ—Ñ–∞–±–∞: {e.Message}\n{e.StackTrace}");
                    yield break;
                }

                Debug.Log("üîÑ [PersonalAreaBootstrap] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...");
                try
                {
                    InitializeComponents(instance, factory);
                    Debug.Log("‚úÖ [PersonalAreaBootstrap] –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã");
                }
                catch (Exception e)
                {
                    Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {e.Message}\n{e.StackTrace}");
                }
            }
            catch (Exception e)
            {
                Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e.Message}\n{e.StackTrace}");
            }
        }

        private void InitializeComponents(GameObject instance, MonoFactory factory)
        {
            Debug.Log("[PersonalAreaBootstrap] –ü–æ–∏—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ –∏–Ω—Å—Ç–∞–Ω—Å–µ...");
            
            var uiController = instance.GetComponentInChildren<PersonalAreaUIController>();
            var manager = instance.GetComponentInChildren<PersonalAreaManager>();

            if (uiController == null)
            {
                Debug.LogError("‚ùå [PersonalAreaBootstrap] PersonalAreaUIController –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–µ—Ñ–∞–±–µ");
                return;
            }

            if (manager == null)
            {
                Debug.LogError("‚ùå [PersonalAreaBootstrap] PersonalAreaManager –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –∏–Ω—Å—Ç–∞–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–µ—Ñ–∞–±–µ");
                return;
            }

            Debug.Log("[PersonalAreaBootstrap] –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∞–±—Ä–∏–∫—É...");
            
            try
            {
                factory.CreateOn<PersonalAreaUIController>(uiController.gameObject);
                Debug.Log("‚úÖ [PersonalAreaBootstrap] PersonalAreaUIController —Å–æ–∑–¥–∞–Ω");
            }
            catch (Exception e)
            {
                Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PersonalAreaUIController: {e.Message}\n{e.StackTrace}");
            }
            
            try
            {
                manager.Inject(_container, factory);
                Debug.Log("‚úÖ [PersonalAreaBootstrap] PersonalAreaManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
            }
            catch (Exception e)
            {
                Debug.LogError($"‚ùå [PersonalAreaBootstrap] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PersonalAreaManager: {e.Message}\n{e.StackTrace}");
            }
        }
    }
}
