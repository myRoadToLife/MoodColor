using System.Collections;
using App.Develop.CommonServices.Firebase.Common.SecureStorage;
using App.Develop.CommonServices.SceneManagement;
using App.Develop.DI;
using Firebase.Auth;
using Firebase.Database;
using Firebase.Extensions;
using TMPro;
using UnityEngine;
using UnityEngine.UI;
using System.Linq;
using System;
using App.Develop.CommonServices.Firebase.Auth.Services;

namespace App.Develop.Scenes.PersonalAreaScene.Settings
{
    public class AccountDeletionManager : MonoBehaviour, IInjectable
    {
        #region SerializeFields
        [Header("Panels")]
        [SerializeField] private GameObject _popupPanel;
        [SerializeField] private TMP_Text _popupText;
        [SerializeField] private GameObject _confirmDeletePanel;
        [SerializeField] private Button _closePopupButton;

        [Header("Controls")]
        [SerializeField] private Button _logoutButton;
        [SerializeField] private Button _showDeleteButton;
        [SerializeField] private Button _cancelDeleteButton;
        [SerializeField] private Button _confirmDeleteButton;
        [SerializeField] private Toggle _showPasswordToggle;
        [SerializeField] private TMP_InputField _passwordInput;
        #endregion

        #region Private Fields
        private SceneSwitcher _sceneSwitcher;
        private FirebaseAuth _auth;
        private DatabaseReference _database;
        private IAuthStateService _authStateService;
        private AccountDeletionHelper _deletionHelper;
        private string _plainPassword = "";
        #endregion

        #region Unity Lifecycle
        private void Start()
        {
            Debug.Log("‚úÖ AccountDeletionManager.Start –≤—ã–∑–≤–∞–Ω. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–Ω—ä–µ–∫—Ü–∏—è –ø—Ä–æ–∏–∑–æ—à–ª–∞ –¥–æ Start.");
            
            // –í–º–µ—Å—Ç–æ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—É—Ç–∏–Ω—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∂–¥–∞—Ç—å,
            // –ø–æ–∫–∞ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
            StartCoroutine(WaitForDependenciesAndInitialize());
        }

        private IEnumerator WaitForDependenciesAndInitialize()
        {
            // –ñ–¥–µ–º –º–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            float waitTime = 0f;
            float maxWaitTime = Mathf.Min(10f, Time.maximumDeltaTime * 30f);
            
            // –ñ–¥–µ–º, –ø–æ–∫–∞ _authStateService –Ω–µ –±—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ –∏—Å—Ç–µ—á–µ—Ç –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
            while (_authStateService == null && waitTime < maxWaitTime)
            {
                waitTime += Time.deltaTime;
                yield return null;
            }
            
            // –ü–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
            if (_authStateService == null)
            {
                Debug.LogError($"‚ùå _authStateService –æ—Å—Ç–∞–ª—Å—è NULL –ø–æ—Å–ª–µ {waitTime} —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è! " +
                              "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–Ω—ä–µ–∫—Ü–∏–µ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ Addressables.");
                // –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ü–µ–Ω—É
                ShowPopup("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                yield break;
            }
            
            // –¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É –Ω–∞—Å –µ—Å—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            Debug.Log($"‚úÖ _authStateService —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –ø–æ—Å–ª–µ {waitTime} —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è.");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
            CheckAuthenticationState();
            
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            _authStateService.AuthStateChanged += OnAuthStateChanged;
        }

        private void OnDestroy()
        {
            // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
            if (_authStateService != null)
            {
                _authStateService.AuthStateChanged -= OnAuthStateChanged;
            }
            
            // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏–π –ø–æ–º–æ—â–Ω–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
            UnsubscribeFromHelperEvents();
        }
        #endregion

        #region Initialization
        public void Inject(DIContainer container)
        {
            Debug.Log("üöÄ [AccountDeletionManager] Inject CALLED. Container is null: " + (container == null));

            try 
            {
                if (container == null) 
                {
                    Debug.LogError("‚ùå [AccountDeletionManager] Inject CALLED with a NULL container!");
                    throw new ArgumentNullException(nameof(container));
                }
                
                _sceneSwitcher = container.Resolve<SceneSwitcher>();
                if (_sceneSwitcher == null) Debug.LogError("‚ùå [AccountDeletionManager] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SceneSwitcher –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!");
                
                _auth = FirebaseAuth.DefaultInstance;
                if (_auth == null) Debug.LogError("‚ùå [AccountDeletionManager] FirebaseAuth.DefaultInstance –≤–µ—Ä–Ω—É–ª NULL!");
                
                _database = container.Resolve<DatabaseReference>();
                if (_database == null) Debug.LogError("‚ùå [AccountDeletionManager] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å DatabaseReference –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞!");
                
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–µ—Ä–≤–∏—Å –∏ –ª–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                IAuthStateService resolvedService = null;
                try
                {
                    resolvedService = container.Resolve<IAuthStateService>();
                }
                catch (Exception ex)
                {
                    Debug.LogError($"‚ùå [AccountDeletionManager] –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ Resolve<IAuthStateService>: {ex.Message}\n{ex.StackTrace}");
                }
                
                _authStateService = resolvedService;
                if (_authStateService == null) 
                {
                    Debug.LogError("‚ùå [AccountDeletionManager] IAuthStateService –æ—Å—Ç–∞–ª—Å—è NULL –ø–æ—Å–ª–µ –ø–æ–ø—ã—Ç–∫–∏ Resolve! –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞.");
                    return; 
                }
                else
                {
                    Debug.Log("‚úÖ [AccountDeletionManager] IAuthStateService –£–°–ü–ï–®–ù–û –ø–æ–ª—É—á–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.");
                }
                
                _deletionHelper = new AccountDeletionHelper(_database, _authStateService);
                SubscribeToHelperEvents();

                InitializeUI();
                Debug.Log("‚úÖ AccountDeletionManager —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ Inject");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ Inject AccountDeletionManager: {ex.Message}\n{ex.StackTrace}");
            }
        }
        
        private void SubscribeToHelperEvents()
        {
            if (_deletionHelper == null) return;
            
            _deletionHelper.OnMessage += ShowPopup;
            _deletionHelper.OnError += ShowPopup;
            _deletionHelper.OnRedirectToAuth += () => StartCoroutine(DelayedRedirect());
            _deletionHelper.OnUserDeleted += () => 
            {
                ShowPopup("–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.");
                _sceneSwitcher.ProcessSwitchSceneFor(new OutputPersonalAreaScreenArgs(new AuthSceneInputArgs()));
            };
        }
        
        private void UnsubscribeFromHelperEvents()
        {
            if (_deletionHelper == null) return;
            
            _deletionHelper.OnMessage -= ShowPopup;
            _deletionHelper.OnError -= ShowPopup;
            _deletionHelper.OnRedirectToAuth -= () => StartCoroutine(DelayedRedirect());
            _deletionHelper.OnUserDeleted -= () => 
            {
                ShowPopup("–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.");
                _sceneSwitcher.ProcessSwitchSceneFor(new OutputPersonalAreaScreenArgs(new AuthSceneInputArgs()));
            };
        }
        #endregion

        #region Authentication State Management
        private void OnAuthStateChanged(FirebaseUser user)
        {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Auth –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            _auth = FirebaseAuth.DefaultInstance;
            
            if (user == null)
            {
                Debug.LogWarning("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞");
                ShowPopup("–í–∞—à–∞ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.");
                
                // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ–ª –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
                StartCoroutine(DelayedRedirect());
            }
            else
            {
                Debug.Log($"‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {user.Email}");
            }
        }
        
        private IEnumerator DelayedRedirect()
        {
            yield return new WaitForSeconds(2f);
            _sceneSwitcher.ProcessSwitchSceneFor(new OutputPersonalAreaScreenArgs(new AuthSceneInputArgs()));
        }

        private void CheckAuthenticationState()
        {
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞
            if (_authStateService == null)
            {
                Debug.LogError("‚ùå _authStateService is NULL –≤ CheckAuthenticationState!");
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
            StartCoroutine(CheckAndRestoreAuthenticationState());
        }
        
        private IEnumerator CheckAndRestoreAuthenticationState()
        {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
            if (_authStateService == null)
            {
                Debug.LogError("‚ùå _authStateService is NULL –≤ CheckAndRestoreAuthenticationState! –ò–Ω—ä–µ–∫—Ü–∏—è –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∏–ª–∏ –∑–∞–ø—É—â–µ–Ω–∞ —Å–ª–∏—à–∫–æ–º –ø–æ–∑–¥–Ω–æ.");
                yield break;
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if (!_authStateService.IsAuthenticated)
            {
                Debug.LogWarning("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ AccountDeletionManager");
                
                // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
                var restoreTask = _authStateService.RestoreAuthenticationAsync();
                
                // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
                while (!restoreTask.IsCompleted)
                {
                    yield return null;
                }
                
                if (restoreTask.Result)
                {
                    Debug.Log("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞Auth
                    _auth = FirebaseAuth.DefaultInstance;
                }
                else
                {
                    Debug.LogError("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é");
                    ShowPopup("–í–∞—à–∞ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.");
                    yield return new WaitForSeconds(2f);
                    _sceneSwitcher.ProcessSwitchSceneFor(new OutputPersonalAreaScreenArgs(new AuthSceneInputArgs()));
                }
            }
            else
            {
                Debug.Log($"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {_authStateService.CurrentUser.Email}");
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                yield return StartCoroutine(RefreshUserCoroutine());
            }
        }
        
        private IEnumerator RefreshUserCoroutine()
        {
            var refreshTask = _authStateService.RefreshUserAsync();
            
            while (!refreshTask.IsCompleted)
            {
                yield return null;
            }
            
            if (!refreshTask.Result)
            {
                Debug.LogWarning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ");
            }
        }
        #endregion

        #region UI Initialization
        private void InitializeUI()
        {
            try 
            {
                Debug.Log("‚úÖ InitializeUI –≤—ã–∑–≤–∞–Ω");

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ UI —ç–ª–µ–º–µ–Ω—Ç—ã
                bool hasErrors = false;
                
                if (_logoutButton == null) { Debug.LogError("‚ùå _logoutButton –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_showDeleteButton == null) { Debug.LogError("‚ùå _showDeleteButton –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_confirmDeleteButton == null) { Debug.LogError("‚ùå _confirmDeleteButton –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_cancelDeleteButton == null) { Debug.LogError("‚ùå _cancelDeleteButton –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_passwordInput == null) { Debug.LogError("‚ùå _passwordInput –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_showPasswordToggle == null) { Debug.LogError("‚ùå _showPasswordToggle –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_popupPanel == null) { Debug.LogError("‚ùå _popupPanel –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                if (_popupText == null) { Debug.LogError("‚ùå _popupText –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"); hasErrors = true; }
                
                if (_closePopupButton == null) 
                {
                    Debug.LogWarning("‚ö†Ô∏è _closePopupButton –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏");
                }

                // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ UI —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –≤—ã—Ö–æ–¥–∏–º –∏–∑ –º–µ—Ç–æ–¥–∞
                if (hasErrors)
                {
                    Debug.LogError("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ UI —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ—Ñ–∞–± –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–µ—Ä–µ–∑ Addressables.");
                    return;
                }

                // –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª–∏
                if (_confirmDeletePanel != null) _confirmDeletePanel.SetActive(false);
                if (_popupPanel != null) _popupPanel.SetActive(false);

                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã UI
                SetupButtons();
                SetupToggles();
                SetupInputFields();
                
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è
                SetPasswordVisibility(false);
                
                Debug.Log("‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI: {ex.Message}\n{ex.StackTrace}");
            }
        }

        #region UI Setup Methods
        private void SetupButtons()
        {
            try 
            {
                if (_logoutButton != null)
                {
                    _logoutButton.onClick.RemoveAllListeners();
                    _logoutButton.onClick.AddListener(Logout);
                }

                if (_showDeleteButton != null)
                {
                    _showDeleteButton.onClick.RemoveAllListeners();
                    _showDeleteButton.onClick.AddListener(ShowDeleteConfirmation);
                }

                if (_cancelDeleteButton != null)
                {
                    _cancelDeleteButton.onClick.RemoveAllListeners();
                    _cancelDeleteButton.onClick.AddListener(CancelDelete);
                }

                if (_confirmDeleteButton != null)
                {
                    _confirmDeleteButton.onClick.RemoveAllListeners();
                    _confirmDeleteButton.onClick.AddListener(ConfirmDelete);
                }
                
                if (_closePopupButton != null)
                {
                    _closePopupButton.onClick.RemoveAllListeners();
                    _closePopupButton.onClick.AddListener(HidePopup);
                }
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–Ω–æ–ø–æ–∫: {ex.Message}");
            }
        }

        private void SetupToggles()
        {
            try
            {
                if (_showPasswordToggle != null)
                {
                    _showPasswordToggle.onValueChanged.RemoveAllListeners();
                    _showPasswordToggle.isOn = false;
                    _showPasswordToggle.onValueChanged.AddListener(OnToggleShowPassword);
                }
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π: {ex.Message}");
            }
        }

        private void SetupInputFields()
        {
            try
            {
                if (_passwordInput != null)
                {
                    _passwordInput.onValueChanged.RemoveAllListeners();
                    _passwordInput.onValueChanged.AddListener(OnPasswordChanged);
                    _passwordInput.contentType = TMP_InputField.ContentType.Password;
                    _passwordInput.ForceLabelUpdate();
                }
            }
            catch (Exception ex)
            {
                Debug.LogError($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞: {ex.Message}");
            }
        }
        #endregion
        #endregion

        #region UI Event Handlers
        private void OnPasswordChanged(string newText)
        {
            Debug.Log($"‚å® –í–≤–µ–¥—ë–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω—ë–Ω: {newText}");
            _plainPassword = newText;
        }

        private void OnToggleShowPassword(bool isVisible)
        {
            Debug.Log($"üîÅ Toggle –ø–∞—Ä–æ–ª—å: {(isVisible ? "–ü–æ–∫–∞–∑–∞—Ç—å" : "–°–∫—Ä—ã—Ç—å")}");
            SetPasswordVisibility(isVisible);
        }

        private void SetPasswordVisibility(bool isVisible)
        {
            _passwordInput.DeactivateInputField();

            _passwordInput.contentType = isVisible
                ? TMP_InputField.ContentType.Standard
                : TMP_InputField.ContentType.Password;

            StartCoroutine(RefreshPasswordField());
        }

        private IEnumerator RefreshPasswordField()
        {
            if (_passwordInput == null) 
            {
                Debug.LogError("[RefreshPasswordField] _passwordInput is NULL!");
                yield break;
            }
            if (_passwordInput.fontAsset == null)
            {
                Debug.LogError("[RefreshPasswordField] _passwordInput.fontAsset is NULL! –≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É.");
            }
            else
            {
                Debug.Log($"[RefreshPasswordField] _passwordInput.fontAsset: {_passwordInput.fontAsset.name}");
            }

            _passwordInput.text = "";
            _passwordInput.ForceLabelUpdate();
            yield return new WaitForEndOfFrame();
            _passwordInput.text = _plainPassword;
            _passwordInput.ForceLabelUpdate();
            _passwordInput.caretPosition = _plainPassword.Length;
            _passwordInput.ActivateInputField();
        }
        #endregion

        #region Account Actions
        private void Logout()
        {
            Debug.Log("üîò Logout –Ω–∞–∂–∞—Ç–∞");

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ _auth –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
            if (_auth == null)
            {
                Debug.LogError("‚ùå _auth is NULL –≤ Logout! –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —É—Å–ø–µ–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ Addressables.");
                ShowPopup("–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
                return;
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —è–≤–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
            SecurePlayerPrefs.SetBool("explicit_logout", true);
            SecurePlayerPrefs.Save();
            Debug.Log("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥ —è–≤–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã");

            _auth.SignOut();
            ShowPopup("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.");

            _sceneSwitcher.ProcessSwitchSceneFor(
                new OutputPersonalAreaScreenArgs(new AuthSceneInputArgs()));
        }

        private void ShowDeleteConfirmation()
        {
            Debug.Log("üîò –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è");
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–Ω–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if (_confirmDeletePanel == null)
            {
                Debug.LogError("‚ùå _confirmDeletePanel is NULL –≤ ShowDeleteConfirmation! –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ Addressables –ø—Ä–µ—Ñ–∞–± –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.");
                ShowPopup("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            if (_authStateService == null || !_authStateService.IsAuthenticated)
            {
                Debug.LogError("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è");
                ShowPopup("–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.");
                StartCoroutine(DelayedRedirect());
                return;
            }
            
            _confirmDeletePanel.SetActive(true);
            SetPasswordVisibility(_showPasswordToggle.isOn);
        }

        private void CancelDelete()
        {
            Debug.Log("üîò –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è");
            _confirmDeletePanel.SetActive(false);
        }

        private void ConfirmDelete()
        {
            Debug.Log("üîò –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ");
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
            _deletionHelper.DeleteAccount(_plainPassword);
        }
        #endregion

        #region UI Messages
        private void ShowPopup(string message)
        {
            if (_popupPanel == null || _popupText == null) return;
            
            Debug.Log($"üì¢ –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è: {message}");
            _popupText.text = message;
            _popupPanel.SetActive(true);
            
            CancelInvoke(nameof(HidePopup));
            
            if (_closePopupButton == null)
            {
                // –ï—Å–ª–∏ –Ω–µ—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è, —Å–∫—Ä—ã–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
                Invoke(nameof(HidePopup), 5f);
            }
        }

        private void HidePopup()
        {
            Debug.Log("üîç –°–∫—Ä—ã—Ç–∏–µ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è");
            _popupPanel?.SetActive(false);
        }
        #endregion
    }
}
