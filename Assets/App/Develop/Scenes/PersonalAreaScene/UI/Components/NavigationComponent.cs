using System;
using UnityEngine;
using UnityEngine.UI;

namespace App.Develop.Scenes.PersonalAreaScene.UI.Components
{
    public class NavigationComponent : MonoBehaviour
    {
        [SerializeField] private Button _logEmotionButton;
        [SerializeField] private Button _historyButton;
        [SerializeField] private Button _friendsButton;
        [SerializeField] private Button _settingsButton;
        [SerializeField] private Button _workshopButton;

        public event Action OnLogEmotion;
        public event Action OnOpenHistory;
        public event Action OnOpenFriends;
        public event Action OnOpenSettings;
        public event Action OnOpenWorkshop;

        public void Initialize()
        {
            Debug.Log("üîÑ [NavigationComponent] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫...");
            
            LogButtonsState();
            
            if (_logEmotionButton != null) 
            {
                _logEmotionButton.onClick.RemoveAllListeners();
                _logEmotionButton.onClick.AddListener(() => {
                    Debug.Log("üîò [NavigationComponent] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ LogEmotion");
                    OnLogEmotion?.Invoke();
                });
                Debug.Log("‚úÖ [NavigationComponent] –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ LogEmotion");
            }
            else
            {
                Debug.LogError("‚ùå [NavigationComponent] –ö–Ω–æ–ø–∫–∞ LogEmotion –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞");
            }
            
            if (_historyButton != null) 
            {
                _historyButton.onClick.RemoveAllListeners();
                _historyButton.onClick.AddListener(() => {
                    Debug.Log("üîò [NavigationComponent] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ History");
                    OnOpenHistory?.Invoke();
                });
                Debug.Log("‚úÖ [NavigationComponent] –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ History");
            }
            else
            {
                Debug.LogError("‚ùå [NavigationComponent] –ö–Ω–æ–ø–∫–∞ History –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞");
            }
            
            if (_friendsButton != null) 
            {
                _friendsButton.onClick.RemoveAllListeners();
                _friendsButton.onClick.AddListener(() => {
                    Debug.Log("üîò [NavigationComponent] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Friends");
                    OnOpenFriends?.Invoke();
                });
                Debug.Log("‚úÖ [NavigationComponent] –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ Friends");
            }
            else
            {
                Debug.LogError("‚ùå [NavigationComponent] –ö–Ω–æ–ø–∫–∞ Friends –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞");
            }
            
            if (_settingsButton != null) 
            {
                _settingsButton.onClick.RemoveAllListeners();
                _settingsButton.onClick.AddListener(() => {
                    Debug.Log("üîò [NavigationComponent] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Settings");
                    
                    if (OnOpenSettings == null)
                    {
                        Debug.LogError("‚ùå [NavigationComponent] –ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ OnOpenSettings!");
                    }
                    else 
                    {
                        Debug.Log("‚úÖ [NavigationComponent] –í—ã–∑—ã–≤–∞–µ–º OnOpenSettings");
                        OnOpenSettings.Invoke();
                    }
                });
                Debug.Log("‚úÖ [NavigationComponent] –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ Settings");
            }
            else
            {
                Debug.LogError("‚ùå [NavigationComponent] –ö–Ω–æ–ø–∫–∞ Settings –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞");
            }
            
            if (_workshopButton != null) 
            {
                _workshopButton.onClick.RemoveAllListeners();
                _workshopButton.onClick.AddListener(() => {
                    Debug.Log("üîò [NavigationComponent] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Workshop");
                    OnOpenWorkshop?.Invoke();
                });
                Debug.Log("‚úÖ [NavigationComponent] –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ Workshop");
            }
            else
            {
                Debug.LogError("‚ùå [NavigationComponent] –ö–Ω–æ–ø–∫–∞ Workshop –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞");
            }
            
            Debug.Log("‚úÖ [NavigationComponent] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
        }

        public Button GetSettingsButton()
        {
            Debug.Log($"üîÑ [NavigationComponent] –ó–∞–ø—Ä–æ—à–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {(_settingsButton != null ? _settingsButton.name : "null")}");
            
            if (_settingsButton != null) 
            {
                Debug.Log($"‚úÖ [NavigationComponent] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–æ–ø–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫: Interactable = {_settingsButton.interactable}, OnClick listeners count = {_settingsButton.onClick.GetPersistentEventCount()}");
            }
            
            return _settingsButton;
        }

        public void Clear()
        {
            Debug.Log("üîÑ [NavigationComponent] –û—á–∏—Å—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫...");
            
            if (_logEmotionButton != null) _logEmotionButton.onClick.RemoveAllListeners();
            if (_historyButton != null) _historyButton.onClick.RemoveAllListeners();
            if (_friendsButton != null) _friendsButton.onClick.RemoveAllListeners();
            if (_settingsButton != null) _settingsButton.onClick.RemoveAllListeners();
            if (_workshopButton != null) _workshopButton.onClick.RemoveAllListeners();
            
            Debug.Log("‚úÖ [NavigationComponent] –ü–æ–¥–ø–∏—Å–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—â–µ–Ω—ã");
        }

        private void OnDestroy()
        {
            Debug.Log("üîÑ [NavigationComponent] OnDestroy –≤—ã–∑–≤–∞–Ω, –æ—á–∏—â–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –∫–Ω–æ–ø–æ–∫");
            Clear();
        }
        
        private void LogButtonsState()
        {
            Debug.Log($"‚ÑπÔ∏è [NavigationComponent] –ö–Ω–æ–ø–∫–∞ LogEmotion: {(_logEmotionButton != null ? "–ù–∞–∑–Ω–∞—á–µ–Ω–∞" : "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")}");
            Debug.Log($"‚ÑπÔ∏è [NavigationComponent] –ö–Ω–æ–ø–∫–∞ History: {(_historyButton != null ? "–ù–∞–∑–Ω–∞—á–µ–Ω–∞" : "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")}");
            Debug.Log($"‚ÑπÔ∏è [NavigationComponent] –ö–Ω–æ–ø–∫–∞ Friends: {(_friendsButton != null ? "–ù–∞–∑–Ω–∞—á–µ–Ω–∞" : "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")}");
            Debug.Log($"‚ÑπÔ∏è [NavigationComponent] –ö–Ω–æ–ø–∫–∞ Settings: {(_settingsButton != null ? "–ù–∞–∑–Ω–∞—á–µ–Ω–∞" : "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")}");
            Debug.Log($"‚ÑπÔ∏è [NavigationComponent] –ö–Ω–æ–ø–∫–∞ Workshop: {(_workshopButton != null ? "–ù–∞–∑–Ω–∞—á–µ–Ω–∞" : "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")}");
        }
    }
} 