using System;
using App.App.Develop.Scenes.PersonalAreaScene.UI.Components;
using App.Develop.CommonServices.Emotion;
using UnityEngine;
using App.Develop.Scenes.PersonalAreaScene.UI.Components;
using App.Develop.Utils.Logging;
using Logger = App.Develop.Utils.Logging.Logger;

namespace App.Develop.Scenes.PersonalAreaScene.UI
{
    public class PersonalAreaUIController : MonoBehaviour
    {
        [SerializeField] private ProfileInfoComponent _profileInfo;
        [SerializeField] private EmotionJarView _emotionJars;
        [SerializeField] private StatisticsView _statistics;
        [SerializeField] private NavigationComponent _navigation;

        public event Action OnLogEmotion
        {
            add => _navigation.OnLogEmotion += value;
            remove => _navigation.OnLogEmotion -= value;
        }

        public event Action OnOpenHistory
        {
            add => _navigation.OnOpenHistory += value;
            remove => _navigation.OnOpenHistory -= value;
        }

        public event Action OnOpenFriends
        {
            add => _navigation.OnOpenFriends += value;
            remove => _navigation.OnOpenFriends -= value;
        }

        public event Action OnOpenSettings
        {
            add => _navigation.OnOpenSettings += value;
            remove => _navigation.OnOpenSettings -= value;
        }

        public event Action OnOpenWorkshop
        {
            add => _navigation.OnOpenWorkshop += value;
            remove => _navigation.OnOpenWorkshop -= value;
        }

        public event Action OnQuitApplication
        {
            add => _navigation.OnQuitApplication += value;
            remove => _navigation.OnQuitApplication -= value;
        }

        private void ValidateComponents()
        {
            Logger.Log("üîÑ [PersonalAreaUIController] –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...");
            
            if (_profileInfo == null) 
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] ProfileInfoComponent –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω");
            }
            else
            {
                Logger.Log("‚úÖ [PersonalAreaUIController] ProfileInfoComponent –≤–∞–ª–∏–¥–µ–Ω");
            }
            
            if (_emotionJars == null) 
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] EmotionJarView –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω");
            }
            else
            {
                Logger.Log("‚úÖ [PersonalAreaUIController] EmotionJarView –≤–∞–ª–∏–¥–µ–Ω: " + _emotionJars.name);
            }
            
            if (_statistics == null) 
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] StatisticsComponent –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω");
            }
            else
            {
                Logger.Log("‚úÖ [PersonalAreaUIController] StatisticsComponent –≤–∞–ª–∏–¥–µ–Ω");
            }
            
            if (_navigation == null) 
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] NavigationComponent –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω");
            }
            else
            {
                Logger.Log("‚úÖ [PersonalAreaUIController] NavigationComponent –≤–∞–ª–∏–¥–µ–Ω");
            }
        }

        public void Initialize()
        {
            Logger.Log("üîÑ [PersonalAreaUIController] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...");
            
            try
            {
                ValidateComponents();
                
                if (_navigation != null)
                {
                    Logger.Log("üîÑ [PersonalAreaUIController] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è NavigationComponent...");
                    try
                    {
                        _navigation.Initialize();
                        Logger.Log("‚úÖ [PersonalAreaUIController] NavigationComponent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
                    }
                    catch (Exception ex)
                    {
                        Logger.LogError($"‚ùå [PersonalAreaUIController] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ NavigationComponent: {ex.Message}");
                    }
                }
                
                if (_emotionJars != null)
                {
                    Logger.Log("üîÑ [PersonalAreaUIController] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EmotionJarView...");
                    try
                    {
                        _emotionJars.Initialize();
                        Logger.Log("‚úÖ [PersonalAreaUIController] EmotionJarView –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
                    }
                    catch (Exception ex)
                    {
                        Logger.LogError($"‚ùå [PersonalAreaUIController] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ EmotionJarView: {ex.Message}\n{ex.StackTrace}");
                    }
                }
                
                Logger.Log("‚úÖ [PersonalAreaUIController] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ");
            }
            catch (Exception ex)
            {
                Logger.LogError($"‚ùå [PersonalAreaUIController] –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞: {ex.Message}\n{ex.StackTrace}");
            }
        }

        public void SetUsername(string username)
        {
            if (_profileInfo == null)
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ProfileInfoComponent –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
                return;
            }
            
            Logger.Log($"üîÑ [PersonalAreaUIController] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {username}");
            _profileInfo.SetUsername(username);
        }
        
        public void SetCurrentEmotion(Sprite emotionSprite)
        {
            if (_profileInfo == null)
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —ç–º–æ—Ü–∏—é: ProfileInfoComponent –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
                return;
            }
            
            Logger.Log($"üîÑ [PersonalAreaUIController] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π —ç–º–æ—Ü–∏–∏: {(emotionSprite != null ? emotionSprite.name : "null")}");
            _profileInfo.SetCurrentEmotion(emotionSprite);
        }
        
        public void SetJar(EmotionTypes type, int amount)
        {
            if (_emotionJars == null)
            {
                Logger.LogError($"‚ùå [PersonalAreaUIController] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –±–∞–Ω–∫–∏ {type}: EmotionJarView –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
                return;
            }
            
            try
            {
                Logger.Log($"üîÑ [PersonalAreaUIController] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ {amount} –¥–ª—è –±–∞–Ω–∫–∏ —Ç–∏–ø–∞ {type}");
                _emotionJars.SetJar(type, amount);
                Logger.Log($"‚úÖ [PersonalAreaUIController] –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –±–∞–Ω–∫–∏ {type} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {amount}");
            }
            catch (Exception ex)
            {
                Logger.LogError($"‚ùå [PersonalAreaUIController] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–ª—è –±–∞–Ω–∫–∏ {type}: {ex.Message}");
            }
        }

        public void SetJarFloat(EmotionTypes type, float amount)
        {
            SetJar(type, Mathf.RoundToInt(amount));
        }
        
        public void SetPoints(int points)
        {
            if (_statistics == null)
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—á–∫–∏: StatisticsComponent –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
                return;
            }
            
            Logger.Log($"üîÑ [PersonalAreaUIController] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—á–∫–æ–≤: {points}");
            _statistics.SetPoints(points);
        }
        
        public void SetEntries(int entries)
        {
            if (_statistics == null)
            {
                Logger.LogError("‚ùå [PersonalAreaUIController] –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å–∏: StatisticsComponent –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
                return;
            }
            
            Logger.Log($"üîÑ [PersonalAreaUIController] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π: {entries}");
            _statistics.SetEntries(entries);
        }

        /// <summary>
        /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç EmotionJarView
        /// </summary>
        public EmotionJarView GetEmotionJarView()
        {
            Logger.Log($"üîÑ [PersonalAreaUIController] –ó–∞–ø—Ä–æ—à–µ–Ω EmotionJarView: {(_emotionJars != null ? _emotionJars.name : "null")}"); 
            return _emotionJars;
        }

        public void ClearAll()
        {
            Logger.Log("üîÑ [PersonalAreaUIController] –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...");
            
            try
            {
                if (_profileInfo != null)
                {
                    _profileInfo.Clear();
                    Logger.Log("‚úÖ [PersonalAreaUIController] ProfileInfoComponent –æ—á–∏—â–µ–Ω");
                }
                
                if (_emotionJars != null)
                {
                    _emotionJars.Clear();
                    Logger.Log("‚úÖ [PersonalAreaUIController] EmotionJarView –æ—á–∏—â–µ–Ω");
                }
                
                if (_statistics != null)
                {
                    _statistics.Clear();
                    Logger.Log("‚úÖ [PersonalAreaUIController] StatisticsComponent –æ—á–∏—â–µ–Ω");
                }
                
                if (_navigation != null)
                {
                    _navigation.Clear();
                    Logger.Log("‚úÖ [PersonalAreaUIController] NavigationComponent –æ—á–∏—â–µ–Ω");
                }
                
                Logger.Log("‚úÖ [PersonalAreaUIController] –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—á–∏—â–µ–Ω—ã");
            }
            catch (Exception ex)
            {
                Logger.LogError($"‚ùå [PersonalAreaUIController] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: {ex.Message}");
            }
        }

        private void OnDestroy()
        {
            Logger.Log("üîÑ [PersonalAreaUIController] OnDestroy –≤—ã–∑–≤–∞–Ω, –æ—á–∏—â–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã");
            ClearAll();
        }

        public NavigationComponent GetNavigationComponent()
        {
            Logger.Log($"üîÑ [PersonalAreaUIController] –ó–∞–ø—Ä–æ—à–µ–Ω NavigationComponent: {(_navigation != null ? _navigation.name : "null")}"); 
            return _navigation;
        }
    }
} 