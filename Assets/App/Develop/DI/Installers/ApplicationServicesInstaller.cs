using App.Develop.Configs;
using App.Develop.CommonServices.Networking;
using App.Develop.CommonServices.Social;
using App.Develop.CommonServices.CoroutinePerformer;
using App.Develop.DI;
using App.Develop.Utils.Logging;
using UnityEngine;

namespace App.Develop.DI.Installers
{
    /// <summary>
    /// Installer –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    /// </summary>
    public class ApplicationServicesInstaller : IServiceInstaller
    {
        private readonly ApplicationConfig _applicationConfig;

        public string InstallerName => "Application Services";

        public ApplicationServicesInstaller(ApplicationConfig applicationConfig)
        {
            _applicationConfig = applicationConfig;
        }

        public void RegisterServices(DIContainer container)
        {
            MyLogger.Log($"üîß –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è {InstallerName}...", MyLogger.LogCategory.Bootstrap);

            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            container.RegisterAsSingle<ApplicationConfig>(c => _applicationConfig).NonLazy();

            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º ConnectivityManager
            container.RegisterAsSingle<ConnectivityManager>(c =>
                new ConnectivityManager(c.Resolve<ICoroutinePerformer>())
            ).NonLazy();

            MyLogger.Log($"‚úÖ {InstallerName} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã", MyLogger.LogCategory.Bootstrap);
        }
    }
}